{"version":3,"sources":["components/Context.js","components/HomeContent.js","ocaml_src/dna.bs.js","ocaml_src/tree.bs.js","ocaml_src/pairwise.bs.js","ocaml_src/distance.bs.js","ocaml_src/phylo_algo.bs.js","components/Generate.js","ocaml_src/lexer.bs.js","ocaml_src/phylo_parser.bs.js","components/Visualize.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Content","Layout","HomeContents","useContext","goVisualizePhylo","goGeneratePhylo","className","justify","gutter","lg","md","sm","onClick","Caml_exceptions","parse_line","str","dna_seq","str$1","$$String","c","switcher","is_dna","$$Buffer","from_string","length","get","pos","exn","get_e","clade_ids","tree","tag","List","rep_ok","t","all_clade_ids","Caml_obj","Caml_primitive","clade_ids_uniq","Pervasives","counter","contents","empty_000","empty","Block","undefined","is_empty","info","leaf","sci_name","id","name","leaf_no_params","zip_no_params","trees","printing","print_output","print_char","Char","print_string","s","print_endline","console","log","print_spaces","n","x","print_vert_helper","_ds","_pos","end_str","ds","h","print_verts","print_branch","print_tree_helper","_t_lst","d","t_lst","new_ds","to_string","max_three","a","b","neighbors","d1","d2","r","mat","align","misalign","indel","Caml_array","Dna$PhyloLibWeb","fill_matrix","m","$$Array","Caml_int32","init_matrix","match","backtrack","acc1","acc2","cell","diff","aligned","s1","s2","len","diff$1","min_pos","dist","Hashtbl","acc","k","v","min_index","avg_helper","j","combine","i","average","Caml_option","remove","is_done","add_species","species","match$1","Tree$PhyloLibWeb","r$1","r$2","dnaArr","names","parseDNA","file","filename","reader","FileReader","onload","dna","Dna","result","push","readAsText","e","Generate","useState","uploadDisabled","setUploadDisabled","generateTree","_dist","_acc","dist$1","Distance$PhyloLibWeb","tree_list","PhyloAlgo","dnas","dist_matrix","Pairwise$PhyloLibWeb","Distance","Tree","fastaUploadProps","accept","action","disabled","headers","authorization","multiple","transformFile","file_name","split","slice","join","toUpperCase","UploadOutlined","is_word","String","word_token_map","make_stream_helper","is_file","stream","in_channel","Stream","param","Caml_builtin_exceptions","char_stream","get_next_line","val","s$1","raw_exn","Caml_js_exceptions","lex_keyword","lex_keyword_helper","is_special_char","is_number","lex_number","Caml_format","tokenize_next_line","stream_of_line","exit","exn$1","exit$1","$$SyntaxError","empty_phylo","description","empty_clade_attr","rank","confidence","taxonomy","peek","consume_token","consume","token","Curry","Lexer$PhyloLibWeb","parse_words","w","add_assoc","lst","attr","consume_end_tag","add_attr","return_tag","tag_name","str_attr","num_attr","bool_attr","words","x$1","parse_start_tag","is_valid_tag","_tag","ignore_tag","parse_name","parse_description","descr","parse_float","f","parse_confidence","n$1","parse_id","parse_scientific_name","parse_taxonomy","_taxonomy","scientific_name","parse_clade","taxon","taxon$1","clade","from_phylo_helper","tokenizer","tokens_in_line","token_function","phylo","parse_phylogeny","from_phylo_str","Visualize","phyloVisible","setPhyloVisible","asciiPhylo","setasciiPhylo","currPhylo","setCurrPhylo","displayPhyloFile","PhyloParser","uploadProps","Group","onChange","filePath","process","target","value","fetch","then","response","blob","defaultValue","Button","content","href","rel","title","trigger","InfoCircleOutlined","Header","useBack","goHome","ArrowLeftOutlined","style","alignSelf","paddingRight","App","screen","setScreen","context","useMemo","CurrScreen","Provider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d1fc70f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React from 'react';\r\nimport { Row, Col, Layout } from 'antd';\r\nimport '../App.css';\r\nimport Context from './Context';\r\nconst { Content } = Layout;\r\n\r\nexport default function HomeContents() {\r\n  const i = 'Welcome to PhyloML';\r\n  const { goVisualizePhylo, goGeneratePhylo } = React.useContext(Context);\r\n  return (\r\n    <div className=\"wrapper main\">\r\n      <Content justify=\"center\">\r\n        <Row className=\"intro\" justify=\"center\" gutter={[16, 16]}>\r\n          <div>\r\n            <h1>{i}</h1>\r\n            <h2>A phylogenetic library written in OCaml.</h2>\r\n            <h2>\r\n              Inferring Evolutionary History through modern genetic similarity.\r\n            </h2>\r\n          </div>\r\n        </Row>\r\n        <Row justify=\"center\" gutter={[16, 40]}>\r\n          <Col lg={7} md={10} sm={12}>\r\n            <div className=\"wrap\">\r\n              <button className=\"offset\" onClick={goGeneratePhylo}>\r\n                Generate Phylogenetic Trees\r\n              </button>\r\n            </div>\r\n          </Col>\r\n          <Col lg={7} md={10} sm={12}>\r\n            <div className=\"wrap\">\r\n              <button className=\"offset\" onClick={goVisualizePhylo}>\r\n                Visualize Phylogenetic Trees\r\n              </button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n    </div>\r\n  );\r\n}\r\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as $$Buffer from \"bs-platform/lib/es6/buffer.js\";\nimport * as Stream from \"bs-platform/lib/es6/stream.js\";\nimport * as $$String from \"bs-platform/lib/es6/string.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_exceptions from \"bs-platform/lib/es6/caml_exceptions.js\";\nimport * as Caml_builtin_exceptions from \"bs-platform/lib/es6/caml_builtin_exceptions.js\";\n\nvar Empty = Caml_exceptions.create(\"Dna-PhyloLibWeb.Empty\");\n\nfunction is_name_line(str) {\n  return $$String.sub(str, 0, 1) === \">\";\n}\n\nfunction is_dna(c) {\n  var switcher = c - 84 | 0;\n  if (!(switcher > 11 || switcher < 0)) {\n    return switcher > 10 || switcher < 1;\n  }\n  switch (switcher) {\n    case -18 :\n    case -16 :\n    case -15 :\n    case -14 :\n        return false;\n    case -19 :\n    case -17 :\n    case -13 :\n        return true;\n    default:\n      return false;\n  }\n}\n\nfunction parse_line(str, dna_seq) {\n  var str$1 = $$String.uppercase_ascii(str);\n  return $$String.iter((function (c) {\n                if (is_dna(c)) {\n                  return $$Buffer.add_char(dna_seq, c);\n                }\n                \n              }), str$1);\n}\n\nfunction parse_first_line(dna_stream) {\n  var v = Stream.peek(dna_stream);\n  if (v !== undefined) {\n    if (is_name_line(v)) {\n      return Stream.junk(dna_stream);\n    } else {\n      return ;\n    }\n  }\n  throw Empty;\n}\n\nfunction from_fasta(init_sizeOpt, loc) {\n  var init_size = init_sizeOpt !== undefined ? init_sizeOpt : 16384;\n  var f = Pervasives.open_in(loc);\n  var read_line = function (i) {\n    try {\n      return Pervasives.input_line(f);\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.end_of_file) {\n        return ;\n      }\n      throw exn;\n    }\n  };\n  var dna_stream = Stream.from(read_line);\n  parse_first_line(dna_stream);\n  var dna_seq = $$Buffer.create(init_size);\n  Stream.iter((function (str) {\n          return parse_line(str, dna_seq);\n        }), dna_stream);\n  return dna_seq;\n}\n\nfunction from_string(str) {\n  var dna_seq = $$Buffer.create(128);\n  parse_line(str, dna_seq);\n  return dna_seq;\n}\n\nfunction is_empty(dna_seq) {\n  return $$Buffer.length(dna_seq) === 0;\n}\n\nvar length = $$Buffer.length;\n\nfunction get(dna_seq, pos) {\n  try {\n    return $$Buffer.nth(dna_seq, pos);\n  }\n  catch (exn){\n    return ;\n  }\n}\n\nvar get_e = $$Buffer.nth;\n\nfunction string_of_range(dna_seq, start_pos, end_pos) {\n  var range = end_pos - start_pos | 0;\n  return $$Buffer.sub(dna_seq, start_pos, range);\n}\n\nvar to_string = $$Buffer.contents;\n\nexport {\n  Empty ,\n  from_fasta ,\n  from_string ,\n  is_empty ,\n  length ,\n  get ,\n  get_e ,\n  string_of_range ,\n  to_string ,\n  \n}\n/* No side effect */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Char from \"bs-platform/lib/es6/char.js\";\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_primitive from \"bs-platform/lib/es6/caml_primitive.js\";\nimport * as Caml_exceptions from \"bs-platform/lib/es6/caml_exceptions.js\";\n\nvar UnknownClade = Caml_exceptions.create(\"Tree-PhyloLibWeb.UnknownClade\");\n\nfunction clade_ids(tree) {\n  if (tree.tag) {\n    return /* [] */0;\n  } else {\n    return /* :: */[\n            tree[/* clade_id */0],\n            List.flatten(List.map(clade_ids, tree[/* children */1]))\n          ];\n  }\n}\n\nfunction clade_ids_uniq(t) {\n  var all_clade_ids = clade_ids(t);\n  return Caml_obj.caml_equal(List.sort_uniq(Caml_primitive.caml_int_compare, all_clade_ids), List.sort(Caml_primitive.caml_int_compare, all_clade_ids));\n}\n\nfunction rep_ok(t) {\n  if (clade_ids_uniq(t)) {\n    return t;\n  } else {\n    return Pervasives.failwith(\"clade_ids not unique\");\n  }\n}\n\nvar counter = {\n  contents: 0\n};\n\nvar empty_000 = /* clade_id */(counter.contents = counter.contents + 1 | 0, counter.contents);\n\nvar empty = /* Clade */Block.__(0, [\n    empty_000,\n    /* children : [] */0,\n    /* bootstrap */undefined,\n    /* rank */undefined,\n    /* id */undefined,\n    /* name */undefined\n  ]);\n\nfunction is_empty(info) {\n  if (info.tag || !(info[/* children */1] === /* [] */0 && info[/* bootstrap */2] === undefined && info[/* rank */3] === undefined && info[/* id */4] === undefined)) {\n    return false;\n  } else {\n    return info[/* name */5] === undefined;\n  }\n}\n\nfunction leaf(sci_name, id, name) {\n  return /* Leaf */Block.__(1, [\n            /* scientific_name */sci_name,\n            /* id */id,\n            /* name */name\n          ]);\n}\n\nfunction leaf_no_params(sci_name) {\n  return /* Leaf */Block.__(1, [\n            /* scientific_name */sci_name,\n            /* id */undefined,\n            /* name */undefined\n          ]);\n}\n\nfunction size_helper(tree, size) {\n  if (tree.tag) {\n    return size + 1 | 0;\n  }\n  var match = tree[/* children */1];\n  if (match) {\n    return 1 + List.fold_left((function (acc, x) {\n                  return acc + size_helper(x, size) | 0;\n                }), 0, /* :: */[\n                match[0],\n                match[1]\n              ]) | 0;\n  } else {\n    return size;\n  }\n}\n\nfunction size(tree) {\n  return size_helper(tree, 0);\n}\n\nfunction zip(trees, bootstrap, rank, parsed_id, name) {\n  if (empty.tag) {\n    return Pervasives.failwith(\"Representation invariant broken\");\n  } else {\n    return rep_ok(/* Clade */Block.__(0, [\n                  /* clade_id */(counter.contents = counter.contents + 1 | 0, counter.contents),\n                  /* children */trees,\n                  /* bootstrap */bootstrap,\n                  /* rank */rank,\n                  /* id */parsed_id,\n                  /* name */name\n                ]));\n  }\n}\n\nfunction zip_no_params(trees) {\n  if (empty.tag) {\n    return Pervasives.failwith(\"Representation invariant broken\");\n  } else {\n    return rep_ok(/* Clade */Block.__(0, [\n                  /* clade_id */(counter.contents = counter.contents + 1 | 0, counter.contents),\n                  /* children */trees,\n                  /* bootstrap */undefined,\n                  /* rank */undefined,\n                  /* id */undefined,\n                  /* name */undefined\n                ]));\n  }\n}\n\nfunction hierarchy(a, b) {\n  if (a.tag) {\n    if (b.tag) {\n      return Caml_primitive.caml_string_compare(a[/* scientific_name */0], b[/* scientific_name */0]);\n    } else {\n      return -1;\n    }\n  } else if (b.tag) {\n    return 1;\n  } else {\n    return Caml_primitive.caml_int_compare(a[/* clade_id */0], b[/* clade_id */0]);\n  }\n}\n\nfunction is_equal(a, b) {\n  if (a.tag) {\n    if (b.tag) {\n      return a[/* scientific_name */0] === b[/* scientific_name */0];\n    } else {\n      return false;\n    }\n  }\n  if (b.tag) {\n    return false;\n  }\n  var s1 = List.sort(hierarchy, a[/* children */1]);\n  var s2 = List.sort(hierarchy, b[/* children */1]);\n  var _a = s1;\n  var _b = s2;\n  var _acc = true;\n  while(true) {\n    var acc = _acc;\n    var b$1 = _b;\n    var a$1 = _a;\n    if (acc === false) {\n      return false;\n    }\n    if (!a$1) {\n      if (b$1) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    if (!b$1) {\n      return false;\n    }\n    _acc = is_equal(a$1[0], b$1[0]);\n    _b = b$1[1];\n    _a = a$1[1];\n    continue ;\n  };\n}\n\nfunction mem(s, t) {\n  if (t.tag) {\n    return t[/* scientific_name */0] === s;\n  } else {\n    return List.fold_left((function (acc, tree) {\n                  if (acc) {\n                    return true;\n                  } else {\n                    return mem(s, tree);\n                  }\n                }), false, t[/* children */1]);\n  }\n}\n\nvar printing = {\n  contents: true\n};\n\nvar print_output = {\n  contents: \"\"\n};\n\nfunction print_char(c) {\n  if (printing.contents) {\n    return Pervasives.print_char(c);\n  } else {\n    print_output.contents = print_output.contents + Char.escaped(c);\n    return ;\n  }\n}\n\nfunction print_string(s) {\n  if (printing.contents) {\n    return Pervasives.print_string(s);\n  } else {\n    print_output.contents = print_output.contents + s;\n    return ;\n  }\n}\n\nfunction print_endline(s) {\n  if (printing.contents) {\n    console.log(s);\n    return ;\n  } else {\n    return print_string(s + \"\\n\");\n  }\n}\n\nfunction print_spaces(n) {\n  for(var x = 1; x <= n; ++x){\n    print_char(/* \" \" */32);\n  }\n  \n}\n\nfunction print_vert_helper(_ds, _pos, end_str) {\n  while(true) {\n    var pos = _pos;\n    var ds = _ds;\n    if (!ds) {\n      return ;\n    }\n    var t = ds[1];\n    var h = ds[0];\n    if (h === pos && h !== 0) {\n      print_spaces(1);\n    } else {\n      print_spaces(((h - pos | 0) << 1) + (\n            h === 0 || pos === 0 ? 0 : 1\n          ) | 0);\n    }\n    if (t === /* [] */0) {\n      print_string(end_str);\n    } else {\n      print_char(/* \"|\" */124);\n    }\n    _pos = h + 1 | 0;\n    _ds = t;\n    continue ;\n  };\n}\n\nfunction print_verts(ds) {\n  print_vert_helper(List.rev(ds), 0, \"|\");\n  return print_endline(\"\");\n}\n\nfunction print_branch(ds) {\n  if (ds) {\n    return print_vert_helper(List.rev(ds), 0, \"o-\");\n  } else {\n    return Pervasives.invalid_arg(\"ds\");\n  }\n}\n\nfunction print_tree_helper(_t_lst, d, ds) {\n  while(true) {\n    var t_lst = _t_lst;\n    if (!t_lst) {\n      return ;\n    }\n    var t = t_lst[1];\n    var h = t_lst[0];\n    if (h.tag) {\n      if (ds !== /* [] */0) {\n        print_verts(ds);\n      } else {\n        Pervasives.print_newline(undefined);\n      }\n      if (ds !== /* [] */0) {\n        print_branch(ds);\n      }\n      var n = h[/* name */2];\n      if (n !== undefined && h[/* scientific_name */0] === \"Unnamed\") {\n        print_endline(n);\n      } else {\n        print_endline(h[/* scientific_name */0]);\n      }\n      _t_lst = t;\n      continue ;\n    }\n    var new_ds = t !== /* [] */0 ? /* :: */[\n        d,\n        ds\n      ] : (\n        ds ? /* :: */[\n            d,\n            ds[1]\n          ] : /* :: */[\n            d,\n            /* [] */0\n          ]\n      );\n    if (ds !== /* [] */0) {\n      print_verts(ds);\n    }\n    if (ds !== /* [] */0) {\n      print_branch(ds);\n    }\n    print_string(\"C\\n\");\n    print_tree_helper(h[/* children */1], d + 1 | 0, new_ds);\n    _t_lst = t;\n    continue ;\n  };\n}\n\nfunction to_string(t) {\n  print_output.contents = \"\";\n  printing.contents = false;\n  print_tree_helper(/* :: */[\n        t,\n        /* [] */0\n      ], 0, /* [] */0);\n  return print_output.contents;\n}\n\nfunction print_tree(t) {\n  printing.contents = true;\n  return print_tree_helper(/* :: */[\n              t,\n              /* [] */0\n            ], 0, /* [] */0);\n}\n\nexport {\n  UnknownClade ,\n  empty ,\n  is_empty ,\n  leaf ,\n  leaf_no_params ,\n  size ,\n  zip ,\n  zip_no_params ,\n  mem ,\n  is_equal ,\n  to_string ,\n  print_tree ,\n  \n}\n/* empty Not a pure module */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Char from \"bs-platform/lib/es6/char.js\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Caml_int32 from \"bs-platform/lib/es6/caml_int32.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_primitive from \"bs-platform/lib/es6/caml_primitive.js\";\nimport * as Dna$PhyloLibWeb from \"./dna.bs.js\";\n\nfunction max_three(a, b, c) {\n  return Caml_obj.caml_max(Caml_obj.caml_max(a, b), c);\n}\n\nfunction init_matrix(d1, d2, indel, m, n) {\n  var mat = $$Array.make_matrix(m, n, -1000000000);\n  for(var r = 0; r < m; ++r){\n    Caml_array.caml_array_set(Caml_array.caml_array_get(mat, r), 0, Caml_int32.imul(r, indel));\n  }\n  for(var c = 0; c < n; ++c){\n    Caml_array.caml_array_set(Caml_array.caml_array_get(mat, 0), c, Caml_int32.imul(c, indel));\n  }\n  return mat;\n}\n\nfunction neighbors(d1, d2, r, c, mat, align, misalign, indel) {\n  var left = c.contents < 1 ? -1000000000 : indel + Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents), c.contents - 1 | 0) | 0;\n  var up = r.contents < 1 ? -1000000000 : indel + Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents - 1 | 0), c.contents) | 0;\n  var diagonal = r.contents < 1 || c.contents < 1 ? -1000000000 : Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents - 1 | 0), c.contents - 1 | 0) + (\n      Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d1, (\n                0 > r.contents ? 0 : r.contents\n              ) - 1 | 0), Dna$PhyloLibWeb.get(d2, (\n                0 > c.contents ? 0 : c.contents\n              ) - 1 | 0)) ? align : misalign\n    ) | 0;\n  return /* tuple */[\n          left,\n          up,\n          diagonal\n        ];\n}\n\nfunction fill_matrix(d1, d2, align, misalign, indel, m, n) {\n  var mat = init_matrix(d1, d2, indel, m, n);\n  for(var r = 1; r < m; ++r){\n    for(var c = 1; c < n; ++c){\n      var match = neighbors(d1, d2, {\n            contents: r\n          }, {\n            contents: c\n          }, mat, align, misalign, indel);\n      Caml_array.caml_array_set(Caml_array.caml_array_get(mat, r), c, max_three(match[0], match[1], match[2]));\n    }\n  }\n  return mat;\n}\n\nfunction backtrack(d1, d2, mat, align, misalign, indel) {\n  var r = {\n    contents: Dna$PhyloLibWeb.length(d1)\n  };\n  var c = {\n    contents: Dna$PhyloLibWeb.length(d2)\n  };\n  var acc1 = \"\";\n  var acc2 = \"\";\n  while(r.contents > 0 || c.contents > 0) {\n    var match = neighbors(d1, d2, r, c, mat, align, misalign, indel);\n    var cell = Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents), c.contents);\n    if (cell === match[2]) {\n      acc1 = Char.escaped(Dna$PhyloLibWeb.get_e(d1, r.contents - 1 | 0)) + acc1;\n      acc2 = Char.escaped(Dna$PhyloLibWeb.get_e(d2, c.contents - 1 | 0)) + acc2;\n      r.contents = r.contents - 1 | 0;\n      c.contents = c.contents - 1 | 0;\n    } else if (cell === match[0]) {\n      acc1 = \"_\" + acc1;\n      acc2 = Char.escaped(Dna$PhyloLibWeb.get_e(d2, c.contents - 1 | 0)) + acc2;\n      c.contents = c.contents - 1 | 0;\n    } else if (cell === match[1]) {\n      acc2 = \"_\" + acc2;\n      acc1 = Char.escaped(Dna$PhyloLibWeb.get_e(d1, r.contents - 1 | 0)) + acc1;\n      r.contents = r.contents - 1 | 0;\n    } else {\n      Pervasives.failwith(\"This should not happen\");\n    }\n  };\n  return [\n          Dna$PhyloLibWeb.from_string(acc1),\n          Dna$PhyloLibWeb.from_string(acc2)\n        ];\n}\n\nfunction align_pair(d1, d2, align, misalign, indel) {\n  var m = Dna$PhyloLibWeb.length(d1) + 1 | 0;\n  var n = Dna$PhyloLibWeb.length(d2) + 1 | 0;\n  var mat = fill_matrix(d1, d2, align, misalign, indel, m, n);\n  var score = Caml_array.caml_array_get(Caml_array.caml_array_get(mat, m - 1 | 0), n - 1 | 0);\n  var alignment = backtrack(d1, d2, mat, align, misalign, indel);\n  return /* tuple */[\n          alignment,\n          score\n        ];\n}\n\nfunction diff(d1, d2, align, misalign, indel) {\n  var m = Dna$PhyloLibWeb.length(d1) + 1 | 0;\n  var n = Dna$PhyloLibWeb.length(d2) + 1 | 0;\n  var mat = fill_matrix(d1, d2, align, misalign, indel, m, n);\n  var aligned = backtrack(d1, d2, mat, align, misalign, indel);\n  var s1 = Caml_array.caml_array_get(aligned, 0);\n  var s2 = Caml_array.caml_array_get(aligned, 1);\n  var len = Dna$PhyloLibWeb.length(s1);\n  var diff$1 = 0;\n  for(var r = 0; r < len; ++r){\n    if (Caml_obj.caml_equal(Dna$PhyloLibWeb.get(s1, r), /* \"_\" */95) || Caml_obj.caml_equal(Dna$PhyloLibWeb.get(s2, r), /* \"_\" */95)) {\n      diff$1 = diff$1 - indel | 0;\n    } else if (Caml_obj.caml_notequal(Dna$PhyloLibWeb.get(s1, r), Dna$PhyloLibWeb.get(s2, r))) {\n      diff$1 = diff$1 + 1 | 0;\n    }\n    \n  }\n  return diff$1;\n}\n\nfunction print_alignment(d1, d2) {\n  var n = Dna$PhyloLibWeb.length(d1);\n  for(var i = 0 ,i_finish = (n - 1 | 0) / 80 | 0; i <= i_finish; ++i){\n    console.log(Dna$PhyloLibWeb.string_of_range(d1, Caml_int32.imul(80, i), Caml_primitive.caml_int_min(n, Caml_int32.imul(80, i + 1 | 0))));\n    for(var j = Caml_int32.imul(80, i) ,j_finish = Caml_primitive.caml_int_min(n - 1 | 0, Caml_int32.imul(80, i + 1 | 0) - 1 | 0); j <= j_finish; ++j){\n      if (Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d1, j), Dna$PhyloLibWeb.get(d2, j))) {\n        Pervasives.print_char(/* \"*\" */42);\n      } else if (Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d1, j), /* \"_\" */95) || Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d2, j), /* \"_\" */95)) {\n        Pervasives.print_char(/* \" \" */32);\n      } else {\n        Pervasives.print_char(/* \"|\" */124);\n      }\n    }\n    Pervasives.print_newline(undefined);\n    console.log(Dna$PhyloLibWeb.string_of_range(d2, Caml_int32.imul(80, i), Caml_primitive.caml_int_min(n, Caml_int32.imul(80, i + 1 | 0))));\n    Pervasives.print_newline(undefined);\n  }\n  \n}\n\nexport {\n  align_pair ,\n  diff ,\n  print_alignment ,\n  \n}\n/* No side effect */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Hashtbl from \"bs-platform/lib/es6/hashtbl.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Msa$PhyloLibWeb from \"./msa.bs.js\";\nimport * as Pairwise$PhyloLibWeb from \"./pairwise.bs.js\";\n\nfunction dist_dna(dnas, align, misalign, indel) {\n  var m = dnas.length;\n  var dist_matrix = Hashtbl.create(undefined, m);\n  for(var i = 0; i < m; ++i){\n    for(var j = i + 1 | 0; j < m; ++j){\n      Hashtbl.add(dist_matrix, /* tuple */[\n            i,\n            j\n          ], Pairwise$PhyloLibWeb.diff(Caml_array.caml_array_get(dnas, i), Caml_array.caml_array_get(dnas, j), align, misalign, indel));\n    }\n  }\n  return dist_matrix;\n}\n\nfunction dist_msa(msa, gap) {\n  var m = Msa$PhyloLibWeb.num_seq(msa);\n  var n = Msa$PhyloLibWeb.seq_len(msa);\n  var dist_matrix = Hashtbl.create(undefined, m);\n  for(var i = 0; i < m; ++i){\n    var diff = 0;\n    for(var j = i + 1 | 0; j < m; ++j){\n      for(var k = 0; k < n; ++k){\n        if (Msa$PhyloLibWeb.get_base(i, k, msa) === /* \"_\" */95 || Msa$PhyloLibWeb.get_base(j, k, msa) === /* \"_\" */95) {\n          diff = diff + gap | 0;\n        } else if (Msa$PhyloLibWeb.get_base(i, k, msa) !== Msa$PhyloLibWeb.get_base(j, k, msa)) {\n          diff = diff + 1 | 0;\n        }\n        \n      }\n      Hashtbl.add(dist_matrix, /* tuple */[\n            i,\n            j\n          ], diff);\n    }\n  }\n  return dist_matrix;\n}\n\nfunction min_pos(dist) {\n  if (Hashtbl.length(dist) === 0) {\n    return /* tuple */[\n            /* tuple */[\n              0,\n              0\n            ],\n            0\n          ];\n  }\n  var acc_000 = /* tuple */[\n    0,\n    0\n  ];\n  var acc = /* tuple */[\n    acc_000,\n    Pervasives.max_float\n  ];\n  return Hashtbl.fold((function (k, v, acc) {\n                if (v < acc[1]) {\n                  return /* tuple */[\n                          k,\n                          v\n                        ];\n                } else {\n                  return acc;\n                }\n              }), dist, acc);\n}\n\nfunction min_diff(dist) {\n  return min_pos(dist)[1];\n}\n\nfunction min_index(dist) {\n  return min_pos(dist)[0];\n}\n\nfunction diff(index, dist) {\n  return Hashtbl.find(dist, index);\n}\n\nfunction remove(i, dist) {\n  return Hashtbl.filter_map_inplace((function (k, v) {\n                if (Caml_obj.caml_equal(k[0], i) || Caml_obj.caml_equal(k[1], i)) {\n                  return ;\n                } else {\n                  return Caml_option.some(v);\n                }\n              }), dist);\n}\n\nfunction avg_helper(j, k, dist) {\n  return Hashtbl.find(dist, /* tuple */[\n              Caml_obj.caml_min(j, k),\n              Caml_obj.caml_max(j, k)\n            ]);\n}\n\nfunction average(i, j, dist) {\n  var avg = function (k, v) {\n    if (k[0] === i) {\n      var other = k[1];\n      var v_val = v + avg_helper(other, i, dist);\n      return v_val / 2;\n    }\n    if (k[1] !== i) {\n      return v;\n    }\n    var other$1 = k[0];\n    return (v + avg_helper(other$1, i, dist)) / 2;\n  };\n  return Hashtbl.filter_map_inplace(avg, dist);\n}\n\nfunction combine(i, j, dist) {\n  if (i >= j) {\n    Pervasives.failwith(\"invalid input\");\n  } else {\n    average(i, j, dist);\n  }\n  remove(j, dist);\n  return dist;\n}\n\nfunction dim(dist) {\n  return Hashtbl.fold((function (k, v, acc) {\n                if (k[0] === 0) {\n                  return acc + 1 | 0;\n                } else {\n                  return acc;\n                }\n              }), dist, 1);\n}\n\nfunction is_done(dist) {\n  return Hashtbl.length(dist) === 0;\n}\n\nexport {\n  dist_dna ,\n  dist_msa ,\n  min_index ,\n  min_diff ,\n  diff ,\n  combine ,\n  dim ,\n  is_done ,\n  \n}\n/* No side effect */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Tree$PhyloLibWeb from \"./tree.bs.js\";\nimport * as Distance$PhyloLibWeb from \"./distance.bs.js\";\n\nfunction add_species(species, i, j, acc) {\n  var s1 = Caml_array.caml_array_get(species, i);\n  var s2 = Caml_array.caml_array_get(species, j);\n  var match = List.assoc_opt(i, acc);\n  var match$1 = List.assoc_opt(j, acc);\n  if (match !== undefined) {\n    if (match$1 !== undefined) {\n      var r = List.remove_assoc(j, List.remove_assoc(i, acc));\n      return /* :: */[\n              /* tuple */[\n                i < j ? i : j,\n                Tree$PhyloLibWeb.zip_no_params(/* :: */[\n                      match,\n                      /* :: */[\n                        match$1,\n                        /* [] */0\n                      ]\n                    ])\n              ],\n              r\n            ];\n    }\n    var r$1 = List.remove_assoc(i, acc);\n    return /* :: */[\n            /* tuple */[\n              i < j ? i : j,\n              Tree$PhyloLibWeb.zip_no_params(/* :: */[\n                    Tree$PhyloLibWeb.leaf_no_params(s2),\n                    /* :: */[\n                      match,\n                      /* [] */0\n                    ]\n                  ])\n            ],\n            r$1\n          ];\n  }\n  if (match$1 === undefined) {\n    return /* :: */[\n            /* tuple */[\n              i < j ? i : j,\n              Tree$PhyloLibWeb.zip_no_params(/* :: */[\n                    Tree$PhyloLibWeb.leaf_no_params(s1),\n                    /* :: */[\n                      Tree$PhyloLibWeb.leaf_no_params(s2),\n                      /* [] */0\n                    ]\n                  ])\n            ],\n            acc\n          ];\n  }\n  var r$2 = List.remove_assoc(j, acc);\n  return /* :: */[\n          /* tuple */[\n            i < j ? i : j,\n            Tree$PhyloLibWeb.zip_no_params(/* :: */[\n                  Tree$PhyloLibWeb.leaf_no_params(s1),\n                  /* :: */[\n                    match$1,\n                    /* [] */0\n                  ]\n                ])\n          ],\n          r$2\n        ];\n}\n\nfunction upgma(dist, species) {\n  var match = species.length;\n  if (match !== 0) {\n    if (match !== 1) {\n      var _dist = dist;\n      var _acc = /* [] */0;\n      while(true) {\n        var acc = _acc;\n        var dist$1 = _dist;\n        if (Distance$PhyloLibWeb.is_done(dist$1)) {\n          var tree_list = List.rev_map((function (x) {\n                  return x[1];\n                }), acc);\n          if (List.length(tree_list) === 1) {\n            return List.hd(tree_list);\n          } else if (List.length(tree_list) > 1) {\n            return Tree$PhyloLibWeb.zip_no_params(tree_list);\n          } else {\n            return Pervasives.failwith(\"Precondition violated in upgma_help\");\n          }\n        }\n        var match$1 = Distance$PhyloLibWeb.min_index(dist$1);\n        var j = match$1[1];\n        var i = match$1[0];\n        var t = add_species(species, i, j, acc);\n        var d = Distance$PhyloLibWeb.combine(i, j, dist$1);\n        _acc = t;\n        _dist = d;\n        continue ;\n      };\n    } else {\n      return Tree$PhyloLibWeb.leaf_no_params(Caml_array.caml_array_get(species, 0));\n    }\n  } else {\n    return Tree$PhyloLibWeb.empty;\n  }\n}\n\nexport {\n  upgma ,\n  \n}\n/* Tree-PhyloLibWeb Not a pure module */\n","import React, { useState } from 'react';\r\nimport { Button, Row, Layout, Upload } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport * as Dna from '../ocaml_src/dna.bs';\r\nimport * as Tree from '../ocaml_src/tree.bs'\r\nimport * as Pairwise from '../ocaml_src/pairwise.bs';\r\nimport * as Msa from \"../ocaml_src/msa.bs\"\r\nimport * as Distance from \"../ocaml_src/distance.bs\"\r\nimport * as PhyloAlgo from \"../ocaml_src/phylo_algo.bs\"\r\n\r\nimport '../App.css';\r\nconst { Content } = Layout;\r\n\r\nconst dnaArr = [];\r\nconst names = [];\r\n\r\nconst parseDNA = async (file, filename) => {\r\n  try {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const dna = Dna.from_string(reader.result);\r\n      dnaArr.push(dna);\r\n      names.push(filename)\r\n    };\r\n    reader.readAsText(file);\r\n  } catch (e) {\r\n    console.log(e);\r\n    console.log('File printing failed');\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default function Generate() {\r\n  const [uploadDisabled, setUploadDisabled] = useState(false);\r\n  const generateTree = () => {\r\n    setUploadDisabled(true);\r\n    // if (dnaArr.length < 2) {\r\n    //   alert(\"Not enough DNA sequences to perform pairwise alignment\")\r\n    // }\r\n\r\n    const dist_matrix = Distance.dist_dna(dnaArr, 1, (-1), (-1));\r\n    const virus_names = names;\r\n    const tree = PhyloAlgo.upgma(dist_matrix, virus_names);\r\n    console.log(Tree.to_string(tree));\r\n  }\r\n\r\n  const fastaUploadProps = {\r\n    accept: '.FASTA, .txt, .fasta',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    disabled: uploadDisabled,\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    multiple: true,\r\n    transformFile(file) {\r\n      var file_name = file.name.split('.').slice(0, -1).join('.').toUpperCase()\r\n      parseDNA(file, file_name)\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Content justify=\"center\">\r\n        <Row className=\"page\" justify=\"center\">\r\n          <div>\r\n            <h1>Generate a Phylogenetic Tree</h1>\r\n            <h2>\r\n              By computing similarity scores for DNA samples of species, we can\r\n              infer their species' evolutionary history through time. Begin by\r\n              uploading .FASTA files that contain DNA sequences, or use our\r\n              example DNA sequences.\r\n            </h2>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"upload\" >\r\n          <Upload {...fastaUploadProps}>\r\n            <Button>\r\n              <UploadOutlined /> Upload .FASTA files\r\n            </Button>\r\n          </Upload>\r\n          < Button onClick={() => generateTree()}> Generate tree </Button>\r\n        </Row>\r\n      </Content>\r\n    </div >\r\n  );\r\n}\r\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Char from \"bs-platform/lib/es6/char.js\";\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Stream from \"bs-platform/lib/es6/stream.js\";\nimport * as $$String from \"bs-platform/lib/es6/string.js\";\nimport * as Hashtbl from \"bs-platform/lib/es6/hashtbl.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_format from \"bs-platform/lib/es6/caml_format.js\";\nimport * as Caml_js_exceptions from \"bs-platform/lib/es6/caml_js_exceptions.js\";\nimport * as Caml_builtin_exceptions from \"bs-platform/lib/es6/caml_builtin_exceptions.js\";\n\nfunction is_word(t) {\n  if (typeof t === \"number\") {\n    if (t >= 14) {\n      return t < 17;\n    } else {\n      return t < 9;\n    }\n  } else {\n    return true;\n  }\n}\n\nfunction to_string(t) {\n  if (typeof t !== \"number\") {\n    if (t.tag) {\n      return t[0];\n    } else {\n      return String(t[0]);\n    }\n  }\n  switch (t) {\n    case /* Phylogeny */0 :\n        return \"phylogeny\";\n    case /* Name */1 :\n        return \"name\";\n    case /* Description */2 :\n        return \"description\";\n    case /* Clade */3 :\n        return \"clade\";\n    case /* Rank */4 :\n        return \"rank\";\n    case /* Confidence */5 :\n        return \"confidence\";\n    case /* Taxonomy */6 :\n        return \"taxonomy\";\n    case /* SciName */7 :\n        return \"scientific_name\";\n    case /* ID */8 :\n        return \"id\";\n    case /* LAngle */9 :\n        return \"<\";\n    case /* LAngleSlash */10 :\n        return \"</\";\n    case /* RAngle */11 :\n        return \">\";\n    case /* Quote */12 :\n        return \"quote\";\n    case /* Eq */13 :\n        return \"=\";\n    case /* Dot */14 :\n        return \".\";\n    case /* True */15 :\n        return \"true\";\n    case /* False */16 :\n        return \"false\";\n    case /* EOF */17 :\n        return \"EOF\";\n    case /* Unit */18 :\n        return \"Unit\";\n    \n  }\n}\n\nvar word_token_map = Hashtbl.create(undefined, 16);\n\nHashtbl.add(word_token_map, \"phylogeny\", /* Phylogeny */0);\n\nHashtbl.add(word_token_map, \"name\", /* Name */1);\n\nHashtbl.add(word_token_map, \"description\", /* Description */2);\n\nHashtbl.add(word_token_map, \"clade\", /* Clade */3);\n\nHashtbl.add(word_token_map, \"rank\", /* Rank */4);\n\nHashtbl.add(word_token_map, \"confidence\", /* Confidence */5);\n\nHashtbl.add(word_token_map, \"taxonomy\", /* Taxonomy */6);\n\nHashtbl.add(word_token_map, \"scientific_name\", /* SciName */7);\n\nHashtbl.add(word_token_map, \"id\", /* ID */8);\n\nHashtbl.add(word_token_map, \"true\", /* True */15);\n\nHashtbl.add(word_token_map, \"false\", /* False */16);\n\nfunction get_next_line(s, _acc) {\n  while(true) {\n    var acc = _acc;\n    var c = Stream.peek(s);\n    if (c !== undefined) {\n      Stream.junk(s);\n      if (c === 10) {\n        return acc;\n      }\n      if (c === 13) {\n        return acc;\n      }\n      _acc = acc + Char.escaped(c);\n      continue ;\n    }\n    if (acc === \"\") {\n      throw Caml_builtin_exceptions.end_of_file;\n    }\n    return acc;\n  };\n}\n\nfunction make_stream_helper(s, is_file) {\n  var stream;\n  if (is_file) {\n    var in_channel = Pervasives.open_in(s);\n    stream = Stream.from((function (param) {\n            try {\n              return Pervasives.input_line(in_channel);\n            }\n            catch (exn){\n              if (exn === Caml_builtin_exceptions.end_of_file) {\n                return ;\n              }\n              throw exn;\n            }\n          }));\n  } else {\n    var char_stream = Stream.of_string(s);\n    stream = Stream.from((function (param) {\n            try {\n              return get_next_line(char_stream, \"\");\n            }\n            catch (exn){\n              if (exn === Caml_builtin_exceptions.end_of_file) {\n                return ;\n              }\n              throw exn;\n            }\n          }));\n  }\n  var s$1 = Stream.peek(stream);\n  if (s$1 === undefined) {\n    return stream;\n  }\n  var val;\n  try {\n    val = $$String.sub(s$1, 0, 5);\n  }\n  catch (raw_exn){\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n    if (exn[0] === Caml_builtin_exceptions.invalid_argument) {\n      return stream;\n    }\n    throw exn;\n  }\n  if (val !== \"<?xml\") {\n    return stream;\n  }\n  Stream.junk(stream);\n  return stream;\n}\n\nfunction stream_of_file(f) {\n  return make_stream_helper(f, true);\n}\n\nfunction stream_of_string(s) {\n  return make_stream_helper(s, false);\n}\n\nfunction stream_of_line(stream) {\n  var str;\n  try {\n    str = Stream.next(stream);\n  }\n  catch (exn){\n    if (exn === Stream.Failure) {\n      throw Caml_builtin_exceptions.end_of_file;\n    }\n    throw exn;\n  }\n  return Stream.of_string(str);\n}\n\nfunction is_special_char(c) {\n  if (c >= 60) {\n    return c < 63;\n  } else {\n    return c === 34;\n  }\n}\n\nfunction lex_keyword(stream, acc) {\n  var c = Stream.peek(stream);\n  if (c !== undefined) {\n    var val;\n    try {\n      val = c;\n    }\n    catch (exn){\n      if (exn === Stream.Failure) {\n        return lex_keyword_helper(acc);\n      }\n      throw exn;\n    }\n    if (val !== 32) {\n      if (Hashtbl.mem(word_token_map, acc)) {\n        return Hashtbl.find(word_token_map, acc);\n      } else if (is_special_char(c)) {\n        return /* Word */Block.__(1, [acc]);\n      } else {\n        Stream.junk(stream);\n        return lex_keyword(stream, acc + Char.escaped(c));\n      }\n    } else {\n      return lex_keyword_helper(acc);\n    }\n  } else {\n    return lex_keyword_helper(acc);\n  }\n}\n\nfunction lex_keyword_helper(acc) {\n  if (Hashtbl.mem(word_token_map, acc)) {\n    return Hashtbl.find(word_token_map, acc);\n  } else {\n    return /* Word */Block.__(1, [acc]);\n  }\n}\n\nfunction is_number(c) {\n  return !(c > 57 || c < 48);\n}\n\nfunction lex_number(stream, _acc) {\n  while(true) {\n    var acc = _acc;\n    var c = Stream.peek(stream);\n    if (c === undefined) {\n      return /* Num */Block.__(0, [Caml_format.caml_int_of_string(acc)]);\n    }\n    if (!is_number(c)) {\n      return /* Num */Block.__(0, [Caml_format.caml_int_of_string(acc)]);\n    }\n    Stream.junk(stream);\n    _acc = acc + Char.escaped(c);\n    continue ;\n  };\n}\n\nfunction tokenize_next_line(stream) {\n  var x;\n  try {\n    x = stream_of_line(stream);\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.end_of_file) {\n      return /* :: */[\n              /* EOF */17,\n              /* [] */0\n            ];\n    }\n    throw exn;\n  }\n  var _acc = /* [] */0;\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    var c;\n    try {\n      c = Stream.next(x);\n      exit = 1;\n    }\n    catch (exn$1){\n      if (exn$1 === Stream.Failure) {\n        return List.rev(acc);\n      }\n      if (exn$1 === Caml_builtin_exceptions.end_of_file) {\n        return /* :: */[\n                /* EOF */17,\n                /* [] */0\n              ];\n      }\n      throw exn$1;\n    }\n    if (exit === 1) {\n      var exit$1 = 0;\n      if (c >= 32) {\n        if (c !== 46) {\n          if (c >= 60) {\n            if (c >= 63) {\n              exit$1 = 2;\n            } else {\n              switch (c - 60 | 0) {\n                case 0 :\n                    var n = Stream.peek(x);\n                    if (n === undefined) {\n                      return List.rev(/* :: */[\n                                  /* LAngle */9,\n                                  acc\n                                ]);\n                    }\n                    if (n === /* \"/\" */47) {\n                      Stream.junk(x);\n                      _acc = /* :: */[\n                        /* LAngleSlash */10,\n                        acc\n                      ];\n                      continue ;\n                    }\n                    _acc = /* :: */[\n                      /* LAngle */9,\n                      acc\n                    ];\n                    continue ;\n                case 1 :\n                    _acc = /* :: */[\n                      /* Eq */13,\n                      acc\n                    ];\n                    continue ;\n                case 2 :\n                    _acc = /* :: */[\n                      /* RAngle */11,\n                      acc\n                    ];\n                    continue ;\n                \n              }\n            }\n          } else if (c >= 35) {\n            exit$1 = 2;\n          } else {\n            switch (c - 32 | 0) {\n              case 0 :\n                  continue ;\n              case 1 :\n                  exit$1 = 2;\n                  break;\n              case 2 :\n                  _acc = /* :: */[\n                    /* Quote */12,\n                    acc\n                  ];\n                  continue ;\n              \n            }\n          }\n        } else {\n          _acc = /* :: */[\n            /* Dot */14,\n            acc\n          ];\n          continue ;\n        }\n      } else if (c >= 11) {\n        if (c !== 13) {\n          exit$1 = 2;\n        } else {\n          continue ;\n        }\n      } else {\n        if (c >= 9) {\n          continue ;\n        }\n        exit$1 = 2;\n      }\n      if (exit$1 === 2) {\n        if (is_number(c)) {\n          _acc = /* :: */[\n            lex_number(x, Char.escaped(c)),\n            acc\n          ];\n          continue ;\n        }\n        _acc = /* :: */[\n          lex_keyword(x, Char.escaped(c)),\n          acc\n        ];\n        continue ;\n      }\n      \n    }\n    \n  };\n}\n\nfunction token_function_builder(stream) {\n  var tokens_in_line = {\n    contents: tokenize_next_line(stream)\n  };\n  var token_function = {\n    contents: (function (b, param) {\n        return /* EOF */17;\n      })\n  };\n  token_function.contents = (function (b) {\n      if (b) {\n        return (function (param) {\n            var match = tokens_in_line.contents;\n            if (match) {\n              return match[0];\n            } else {\n              tokens_in_line.contents = tokenize_next_line(stream);\n              return Curry._2(token_function.contents, true, undefined);\n            }\n          });\n      } else {\n        return (function (param) {\n            var match = tokens_in_line.contents;\n            if (match) {\n              tokens_in_line.contents = match[1];\n              return /* Unit */18;\n            } else {\n              tokens_in_line.contents = tokenize_next_line(stream);\n              return /* Unit */18;\n            }\n          });\n      }\n    });\n  return token_function.contents;\n}\n\nexport {\n  is_word ,\n  to_string ,\n  stream_of_file ,\n  stream_of_string ,\n  tokenize_next_line ,\n  token_function_builder ,\n  \n}\n/* word_token_map Not a pure module */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Caml_format from \"bs-platform/lib/es6/caml_format.js\";\nimport * as Caml_exceptions from \"bs-platform/lib/es6/caml_exceptions.js\";\nimport * as Tree$PhyloLibWeb from \"./tree.bs.js\";\nimport * as Lexer$PhyloLibWeb from \"./lexer.bs.js\";\n\nvar $$SyntaxError = Caml_exceptions.create(\"Phylo_parser-PhyloLibWeb.SyntaxError\");\n\nvar empty_phylo = {\n  name: \"\",\n  description: \"\",\n  tree: Tree$PhyloLibWeb.empty\n};\n\nvar empty_clade_attr = {\n  name: undefined,\n  rank: undefined,\n  confidence: undefined,\n  taxonomy: undefined\n};\n\nfunction empty_start_tag(t) {\n  return {\n          tag_name: t,\n          str_attr: undefined,\n          num_attr: undefined,\n          bool_attr: undefined\n        };\n}\n\nfunction print_debug(s) {\n  \n}\n\nvar peek = {\n  contents: (function (param) {\n      return /* EOF */17;\n    })\n};\n\nvar consume_token = {\n  contents: (function (param) {\n      return /* EOF */17;\n    })\n};\n\nfunction consume(token) {\n  var x = Curry._1(peek.contents, undefined);\n  if (Caml_obj.caml_equal(x, token)) {\n    Curry._1(consume_token.contents, undefined);\n    return ;\n  }\n  print_debug(\"Expected \" + (Lexer$PhyloLibWeb.to_string(token) + (\", got \" + Lexer$PhyloLibWeb.to_string(x))));\n  throw $$SyntaxError;\n}\n\nfunction is_valid_tag(t) {\n  if (typeof t !== \"number\") {\n    if (t.tag === /* Word */1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  switch (t) {\n    case /* Phylogeny */0 :\n    case /* Name */1 :\n    case /* Description */2 :\n    case /* Clade */3 :\n    case /* Rank */4 :\n    case /* Confidence */5 :\n    case /* Taxonomy */6 :\n    case /* SciName */7 :\n    case /* ID */8 :\n        return true;\n    default:\n      return false;\n  }\n}\n\nfunction parse_words(_acc) {\n  while(true) {\n    var acc = _acc;\n    var w = Curry._1(peek.contents, undefined);\n    if (typeof w === \"number\") {\n      switch (w) {\n        case /* Name */1 :\n        case /* Description */2 :\n        case /* Clade */3 :\n        case /* Rank */4 :\n        case /* Confidence */5 :\n        case /* Taxonomy */6 :\n        case /* ID */8 :\n        case /* Dot */14 :\n        case /* True */15 :\n            break;\n        default:\n          return acc;\n      }\n    } else {\n      if (w.tag) {\n        var s = w[0];\n        consume(/* Word */Block.__(1, [s]));\n        if (acc !== \"\") {\n          _acc = acc + (\" \" + s);\n          continue ;\n        }\n        _acc = s;\n        continue ;\n      }\n      var n = w[0];\n      consume(/* Num */Block.__(0, [n]));\n      if (acc !== \"\") {\n        _acc = acc + (\" \" + String(n));\n        continue ;\n      }\n      _acc = String(n);\n      continue ;\n    }\n    consume(w);\n    if (acc !== \"\") {\n      _acc = acc + (\" \" + Lexer$PhyloLibWeb.to_string(w));\n      continue ;\n    }\n    _acc = Lexer$PhyloLibWeb.to_string(w);\n    continue ;\n  };\n}\n\nfunction add_assoc(lst, attr) {\n  if (lst !== undefined) {\n    return /* :: */[\n            attr,\n            lst\n          ];\n  } else {\n    return /* :: */[\n            attr,\n            /* [] */0\n          ];\n  }\n}\n\nfunction consume_end_tag(t) {\n  consume(/* LAngleSlash */10);\n  consume(t);\n  return consume(/* RAngle */11);\n}\n\nfunction add_attr(tag, attr) {\n  var x = Curry._1(peek.contents, undefined);\n  if (typeof x === \"number\") {\n    if (x === /* Quote */12) {\n      consume(/* Quote */12);\n      var match = Curry._1(peek.contents, undefined);\n      var return_tag;\n      if (typeof match === \"number\") {\n        if (match !== 15) {\n          if (match !== 16) {\n            print_debug(\"add_attr attribute error\");\n            throw $$SyntaxError;\n          }\n          consume(/* False */16);\n          return_tag = {\n            tag_name: tag.tag_name,\n            str_attr: tag.str_attr,\n            num_attr: tag.num_attr,\n            bool_attr: add_assoc(tag.bool_attr, /* tuple */[\n                  attr,\n                  false\n                ])\n          };\n        } else {\n          consume(/* True */15);\n          return_tag = {\n            tag_name: tag.tag_name,\n            str_attr: tag.str_attr,\n            num_attr: tag.num_attr,\n            bool_attr: add_assoc(tag.bool_attr, /* tuple */[\n                  attr,\n                  true\n                ])\n          };\n        }\n      } else {\n        var words = parse_words(\"\");\n        return_tag = {\n          tag_name: tag.tag_name,\n          str_attr: add_assoc(tag.str_attr, /* tuple */[\n                attr,\n                words\n              ]),\n          num_attr: tag.num_attr,\n          bool_attr: tag.bool_attr\n        };\n      }\n      consume(/* Quote */12);\n      return return_tag;\n    }\n    print_debug(\"add_attr match failure\");\n    throw $$SyntaxError;\n  } else {\n    if (x.tag) {\n      print_debug(\"add_attr match failure\");\n      throw $$SyntaxError;\n    }\n    var x$1 = x[0];\n    consume(/* Num */Block.__(0, [x$1]));\n    return {\n            tag_name: tag.tag_name,\n            str_attr: tag.str_attr,\n            num_attr: add_assoc(tag.num_attr, /* tuple */[\n                  attr,\n                  x$1\n                ]),\n            bool_attr: tag.bool_attr\n          };\n  }\n}\n\nfunction parse_start_tag(param) {\n  consume(/* LAngle */9);\n  var x = Curry._1(peek.contents, undefined);\n  var tmp;\n  if (is_valid_tag(x)) {\n    consume(x);\n    tmp = empty_start_tag(x);\n  } else {\n    print_debug(\"parse_start_tag error\");\n    throw $$SyntaxError;\n  }\n  var _tag = tmp;\n  while(true) {\n    var tag = _tag;\n    var x$1 = Curry._1(peek.contents, undefined);\n    if (Lexer$PhyloLibWeb.is_word(x$1)) {\n      consume(x$1);\n      consume(/* Eq */13);\n      var attr = Lexer$PhyloLibWeb.to_string(x$1);\n      _tag = add_attr(tag, attr);\n      continue ;\n    }\n    if (typeof x$1 === \"number\") {\n      if (x$1 !== 11) {\n        print_debug(\"parse_attr match failure\");\n        throw $$SyntaxError;\n      }\n      consume(/* RAngle */11);\n      return tag;\n    }\n    print_debug(\"parse_attr match failure\");\n    throw $$SyntaxError;\n  };\n}\n\nfunction ignore_tag(t) {\n  while(true) {\n    var x = Curry._1(peek.contents, undefined);\n    if (typeof x === \"number\") {\n      if (x !== 9) {\n        if (x === 10) {\n          return consume_end_tag(t);\n        }\n        consume(x);\n        continue ;\n      }\n      var tag = parse_start_tag(undefined);\n      ignore_tag(tag.tag_name);\n      continue ;\n    }\n    consume(x);\n    continue ;\n  };\n}\n\nfunction parse_name(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"Name not word/number\");\n    throw $$SyntaxError;\n  }\n  var name = parse_words(\"\");\n  consume_end_tag(/* Name */1);\n  return name;\n}\n\nfunction parse_description(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"Description not word/number\");\n    throw $$SyntaxError;\n  }\n  var descr = parse_words(\"\");\n  consume_end_tag(/* Description */2);\n  return descr;\n}\n\nfunction parse_float(n) {\n  consume(/* Dot */14);\n  var x = Curry._1(peek.contents, undefined);\n  if (typeof x === \"number\") {\n    print_debug(\"Warning: confidence not valid. Set to default 0.0\");\n    consume_end_tag(/* Confidence */5);\n    return 0.0;\n  }\n  if (x.tag) {\n    print_debug(\"Warning: confidence not valid. Set to default 0.0\");\n    consume_end_tag(/* Confidence */5);\n    return 0.0;\n  }\n  var x$1 = x[0];\n  var f = Caml_format.caml_float_of_string(String(n) + (\".\" + String(x$1)));\n  consume(/* Num */Block.__(0, [x$1]));\n  consume_end_tag(/* Confidence */5);\n  return f;\n}\n\nfunction parse_confidence(param) {\n  var n = Curry._1(peek.contents, undefined);\n  if (typeof n === \"number\") {\n    if (n === /* Dot */14) {\n      return parse_float(0);\n    }\n    print_debug(\"Confidence not a number\");\n    throw $$SyntaxError;\n  } else {\n    if (n.tag) {\n      print_debug(\"Confidence not a number\");\n      throw $$SyntaxError;\n    }\n    var n$1 = n[0];\n    consume(/* Num */Block.__(0, [n$1]));\n    if (Curry._1(peek.contents, undefined) === /* Dot */14) {\n      return parse_float(n$1);\n    } else {\n      consume_end_tag(/* Confidence */5);\n      return n$1;\n    }\n  }\n}\n\nfunction parse_id(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"ID not word/number\");\n    throw $$SyntaxError;\n  }\n  var name = parse_words(\"\");\n  consume_end_tag(/* ID */8);\n  return name;\n}\n\nfunction parse_scientific_name(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"Scientific name not word/number\");\n    throw $$SyntaxError;\n  }\n  var name = parse_words(\"\");\n  consume_end_tag(/* SciName */7);\n  return name;\n}\n\nfunction parse_taxonomy(_taxonomy) {\n  while(true) {\n    var taxonomy = _taxonomy;\n    var match = Curry._1(peek.contents, undefined);\n    if (typeof match === \"number\") {\n      if (match !== 9) {\n        if (match !== 10) {\n          print_debug(\"Unexpected token encountered when parsing taxonomy\");\n          throw $$SyntaxError;\n        }\n        consume_end_tag(/* Taxonomy */6);\n        return taxonomy;\n      }\n      var tag = parse_start_tag(undefined);\n      var x = tag.tag_name;\n      if (typeof x === \"number\") {\n        if (x !== 7) {\n          if (x !== 8) {\n            ignore_tag(x);\n            continue ;\n          }\n          _taxonomy = {\n            id: parse_id(undefined),\n            scientific_name: taxonomy.scientific_name\n          };\n          continue ;\n        }\n        _taxonomy = {\n          id: taxonomy.id,\n          scientific_name: parse_scientific_name(undefined)\n        };\n        continue ;\n      }\n      ignore_tag(x);\n      continue ;\n    }\n    print_debug(\"Unexpected token encountered when parsing taxonomy\");\n    throw $$SyntaxError;\n  };\n}\n\nfunction parse_clade(acc, attr) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    if (match !== 9) {\n      if (match !== 10) {\n        print_debug(\"parse_clade match failure\");\n        throw $$SyntaxError;\n      }\n      consume_end_tag(/* Clade */3);\n      if (Tree$PhyloLibWeb.is_empty(acc)) {\n        var taxon = attr.taxonomy;\n        if (taxon !== undefined) {\n          return Tree$PhyloLibWeb.leaf(taxon.scientific_name, taxon.id, attr.name);\n        }\n        var n = attr.name;\n        if (n !== undefined) {\n          return Tree$PhyloLibWeb.leaf(n, undefined, n);\n        } else {\n          print_debug(\"Warning: no name provided\");\n          return Tree$PhyloLibWeb.leaf_no_params(\"Unnamed\");\n        }\n      } else {\n        if (acc.tag) {\n          return acc;\n        }\n        var taxon$1 = attr.taxonomy;\n        var id = taxon$1 !== undefined ? taxon$1.id : undefined;\n        return /* Clade */Block.__(0, [\n                  /* clade_id */acc[/* clade_id */0],\n                  /* children */acc[/* children */1],\n                  /* bootstrap */attr.confidence,\n                  /* rank */attr.rank,\n                  /* id */id,\n                  /* name */attr.name\n                ]);\n      }\n    }\n    var tag = parse_start_tag(undefined);\n    var x = tag.tag_name;\n    if (typeof x === \"number\") {\n      switch (x) {\n        case /* Name */1 :\n            return parse_clade(acc, {\n                        name: parse_name(undefined),\n                        rank: attr.rank,\n                        confidence: attr.confidence,\n                        taxonomy: attr.taxonomy\n                      });\n        case /* Clade */3 :\n            if (Tree$PhyloLibWeb.is_empty(acc)) {\n              return parse_clade(parse_clade(acc, empty_clade_attr), attr);\n            }\n            var clade = parse_clade(Tree$PhyloLibWeb.empty, empty_clade_attr);\n            return parse_clade(Tree$PhyloLibWeb.zip_no_params(/* :: */[\n                            acc,\n                            /* :: */[\n                              clade,\n                              /* [] */0\n                            ]\n                          ]), attr);\n        case /* Confidence */5 :\n            return parse_clade(acc, {\n                        name: attr.name,\n                        rank: attr.rank,\n                        confidence: parse_confidence(undefined),\n                        taxonomy: attr.taxonomy\n                      });\n        case /* Taxonomy */6 :\n            return parse_clade(acc, {\n                        name: attr.name,\n                        rank: attr.rank,\n                        confidence: attr.confidence,\n                        taxonomy: parse_taxonomy({\n                              id: undefined,\n                              scientific_name: \"Unnamed\"\n                            })\n                      });\n        case /* Phylogeny */0 :\n        case /* Description */2 :\n        case /* Rank */4 :\n        case /* SciName */7 :\n        case /* ID */8 :\n        case /* LAngle */9 :\n        case /* LAngleSlash */10 :\n        case /* RAngle */11 :\n        case /* Quote */12 :\n        case /* Eq */13 :\n        case /* Dot */14 :\n        case /* True */15 :\n        case /* False */16 :\n        case /* EOF */17 :\n        case /* Unit */18 :\n            break;\n        \n      }\n    }\n    ignore_tag(x);\n    return parse_clade(acc, attr);\n  }\n  print_debug(\"parse_clade match failure\");\n  throw $$SyntaxError;\n}\n\nfunction parse_phylogeny(_acc) {\n  while(true) {\n    var acc = _acc;\n    var match = Curry._1(peek.contents, undefined);\n    if (typeof match === \"number\") {\n      if (match !== 9) {\n        if (match !== 10) {\n          print_debug(\"parse_phylogeny match failure\");\n          throw $$SyntaxError;\n        }\n        consume_end_tag(/* Phylogeny */0);\n        return acc;\n      }\n      var tag = parse_start_tag(undefined);\n      var x = tag.tag_name;\n      if (typeof x === \"number\") {\n        if (x >= 4) {\n          ignore_tag(x);\n          continue ;\n        }\n        switch (x) {\n          case /* Phylogeny */0 :\n              ignore_tag(x);\n              continue ;\n          case /* Name */1 :\n              _acc = {\n                name: parse_name(undefined),\n                description: acc.description,\n                tree: acc.tree\n              };\n              continue ;\n          case /* Description */2 :\n              _acc = {\n                name: acc.name,\n                description: parse_description(undefined),\n                tree: acc.tree\n              };\n              continue ;\n          case /* Clade */3 :\n              _acc = {\n                name: acc.name,\n                description: acc.description,\n                tree: parse_clade(acc.tree, empty_clade_attr)\n              };\n              continue ;\n          \n        }\n      } else {\n        ignore_tag(x);\n        continue ;\n      }\n    } else {\n      print_debug(\"parse_phylogeny match failure\");\n      throw $$SyntaxError;\n    }\n  };\n}\n\nfunction from_phylo_helper(f) {\n  var tokenizer = Lexer$PhyloLibWeb.token_function_builder(f);\n  peek.contents = Curry._1(tokenizer, true);\n  consume_token.contents = Curry._1(tokenizer, false);\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    if (match === 9) {\n      var tag = parse_start_tag(undefined);\n      var s = tag.tag_name;\n      if (typeof s === \"number\") {\n        print_debug(\"parse_phylo_tag error 2\");\n        throw $$SyntaxError;\n      }\n      if (s.tag === /* Word */1) {\n        if (s[0] === \"phyloxml\") {\n          var tag$1 = parse_start_tag(undefined);\n          var match$1 = tag$1.tag_name;\n          if (typeof match$1 === \"number\") {\n            if (match$1 !== 0) {\n              print_debug(\"parse_phylo_tag error 1\");\n              throw $$SyntaxError;\n            }\n            var phylo = parse_phylogeny(empty_phylo);\n            consume_end_tag(/* Word */Block.__(1, [\"phyloxml\"]));\n            return phylo;\n          }\n          print_debug(\"parse_phylo_tag error 1\");\n          throw $$SyntaxError;\n        }\n        print_debug(\"parse_phylo_tag error 2\");\n        throw $$SyntaxError;\n      }\n      print_debug(\"parse_phylo_tag error 2\");\n      throw $$SyntaxError;\n    }\n    if (match === 17) {\n      return empty_phylo;\n    }\n    print_debug(\"from_phylo_helper error\");\n    throw $$SyntaxError;\n  }\n  print_debug(\"from_phylo_helper error\");\n  throw $$SyntaxError;\n}\n\nfunction from_phylo_str(s) {\n  return from_phylo_helper(Lexer$PhyloLibWeb.stream_of_string(s));\n}\n\nfunction from_phylo(f) {\n  return from_phylo_helper(Lexer$PhyloLibWeb.stream_of_file(f));\n}\n\nexport {\n  $$SyntaxError ,\n  from_phylo_str ,\n  from_phylo ,\n  \n}\n/* Tree-PhyloLibWeb Not a pure module */\n","import React, { useState } from 'react';\r\nimport { Button, Layout, Popover, Radio, Row, Upload } from 'antd';\r\nimport { InfoCircleOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport '../App.css';\r\nimport * as Tree from '../ocaml_src/tree.bs';\r\nimport * as PhyloParser from '../ocaml_src/phylo_parser.bs';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default function Visualize() {\r\n  const [phyloVisible, setPhyloVisible] = useState(false);\r\n  const [asciiPhylo, setasciiPhylo] = useState('');\r\n  const [currPhylo, setCurrPhylo] = useState('');\r\n\r\n  const reader = new FileReader();\r\n\r\n  const displayPhyloFile = (file) => {\r\n    try {\r\n      reader.onload = () => {\r\n        const phylo = PhyloParser.from_phylo_str(reader.result);\r\n        const str = Tree.to_string(phylo.tree);\r\n        setasciiPhylo(str);\r\n        setPhyloVisible(true);\r\n      };\r\n      reader.readAsText(file);\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.log('File printing failed');\r\n    }\r\n  };\r\n\r\n  const uploadProps = {\r\n    accept: '.xml',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    transformFile(file) {\r\n      displayPhyloFile(file);\r\n    },\r\n  };\r\n\r\n  const changeExamples = (e) => {\r\n    const filePath =\r\n      process.env.PUBLIC_URL + '/examples/phyloXML/' + e.target.value + '.xml';\r\n    setCurrPhylo(e.target.value);\r\n    fetch(filePath)\r\n      .then((response) => response.blob())\r\n      .then((blob) => displayPhyloFile(blob));\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Content justify=\"center\">\r\n        <Row className=\"page\" justify=\"center\" gutter={[16, 16]}>\r\n          <div>\r\n            <h1>Visualize PhyloXML</h1>\r\n            <h2>\r\n              Visualize an existing phylogenetic tree. Begin by uploading a\r\n              phyloXML file, or use our example files.\r\n            </h2>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <Upload {...uploadProps}>\r\n            <Button>\r\n              <UploadOutlined />\r\n              Upload PhyloXML Files\r\n            </Button>\r\n          </Upload>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <p className=\"phylo-example-text\">or see some examples</p>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <Radio.Group\r\n            onChange={changeExamples}\r\n            defaultValue=\"phyloXML examples\"\r\n          >\r\n            <Radio.Button value=\"amphi_frost\">Amphibian Phylogeny</Radio.Button>\r\n            <Radio.Button value=\"tol_156\">The Tree of Life</Radio.Button>\r\n            <Radio.Button value=\"apaf\">Apaf-1 Gene Family Tree</Radio.Button>\r\n            <Radio.Button value=\"adh\">Alcohol Dehydrogenases</Radio.Button>\r\n          </Radio.Group>\r\n          <Popover\r\n            content={\r\n              <p>\r\n                Example files obtained from{' '}\r\n                <a\r\n                  href=\"http://phyloxml.org/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  this website\r\n                </a>\r\n                .\r\n                {currPhylo !== '' ? (\r\n                  <p>\r\n                    See the phyloXML source for the current tree{' '}\r\n                    <a\r\n                      href={\r\n                        currPhylo !== 'adh'\r\n                          ? 'http://phyloxml.org/archaeopteryx-js/phyloxml_trees/' +\r\n                            currPhylo +\r\n                            '.xml'\r\n                          : 'http://www.phyloxml.org/examples/adh.xml'\r\n                      }\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      here\r\n                    </a>\r\n                    .\r\n                  </p>\r\n                ) : null}\r\n              </p>\r\n            }\r\n            title=\"Credits\"\r\n            trigger=\"click\"\r\n          >\r\n            <div className=\"phylo-example-credits\">\r\n              <InfoCircleOutlined />\r\n            </div>\r\n          </Popover>\r\n        </Row>\r\n        {phyloVisible ? (\r\n          <Row justify=\"center\">\r\n            <div className=\"ascii-phylo-container\">\r\n              <p className=\"ascii-phylo\">{asciiPhylo}</p>\r\n            </div>\r\n          </Row>\r\n        ) : null}\r\n        <svg id=\"phylo-container\" name=\"phylo-container\" />\r\n      </Content>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { Popover } from 'antd';\r\nimport { ArrowLeftOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport Context from './components/Context';\r\nimport HomeContent from './components/HomeContent';\r\nimport Generate from './components/Generate';\r\nimport Visualize from './components/Visualize';\r\n\r\nconst Header = ({ useBack }) => {\r\n  const { goHome } = React.useContext(Context);\r\n  const content = (\r\n    <div>\r\n      <p>Content</p>\r\n      <p>Content</p>\r\n    </div>\r\n  );\r\n  return (\r\n    <header className=\"site-header\">\r\n      <button className=\"site-title\" onClick={goHome}>\r\n        {useBack ? (\r\n          <ArrowLeftOutlined\r\n            style={{ alignSelf: 'center', paddingRight: '10px' }}\r\n          />\r\n        ) : null}\r\n        PhyloML\r\n      </button>\r\n      <Popover\r\n        content={content}\r\n        className=\"tooltip\"\r\n        title=\"Title\"\r\n        trigger=\"click\"\r\n      >\r\n        <a className=\"tooltip\">\r\n          {' '}\r\n          <InfoCircleOutlined style={{ paddingRight: '0.5em' }} />\r\n          Confused by all the terms?\r\n        </a>\r\n      </Popover>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [screen, setScreen] = useState('HOME');\r\n\r\n  const context = React.useMemo(\r\n    () => ({\r\n      goHome: () => {\r\n        setScreen('HOME');\r\n      },\r\n      goVisualizePhylo: () => {\r\n        setScreen('VISUALIZE_PHYLO');\r\n      },\r\n      goGeneratePhylo: () => {\r\n        setScreen('GENERATE_PHYLO');\r\n      },\r\n    }),\r\n    [],\r\n  );\r\n\r\n  const CurrScreen = () => {\r\n    switch (screen) {\r\n      case 'HOME':\r\n        return <HomeContent />;\r\n      case 'VISUALIZE_PHYLO':\r\n        return <Visualize />;\r\n      case 'GENERATE_PHYLO':\r\n        return <Generate />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={context}>\r\n      <Header useBack={screen !== 'HOME'} />\r\n      <CurrScreen />\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}