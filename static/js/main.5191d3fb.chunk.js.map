{"version":3,"sources":["components/HoverVocab.js","ocaml_src/Examples/Influenza.js","ocaml_src/Examples/cytochrome_c.js","ocaml_src/Examples/Capsid.js","components/HomeContent.js","ocaml_src/dna.bs.js","ocaml_src/tree.bs.js","ocaml_src/msa.bs.js","ocaml_src/pairwise.bs.js","ocaml_src/distance.bs.js","ocaml_src/phylo_algo.bs.js","ocaml_src/phylo_printer.bs.js","components/Generate.js","ocaml_src/lexer.bs.js","ocaml_src/phylo_parser.bs.js","components/Visualize.js","components/DisplayPairwise.js","App.js","serviceWorker.js","index.js"],"names":["HoverVocab","content","vocab","link","linkText","className","href","target","rel","placement","trigger","influenza","cytochrome","capsid","Content","Layout","HomeContents","useState","cytochrome_c","PhyloTree","setPhyloTree","phyloVisible","setPhyloVisible","console","log","process","justify","gutter","lg","md","sm","to","shape","icon","ArrowDownOutlined","size","style","backgroundColor","borderColor","color","id","Group","onChange","e","value","defaultValue","Button","Caml_exceptions","is_name_line","str","$$String","parse_line","dna_seq","str$1","c","is_dna","switcher","is_protein","$$Buffer","to_string","trim_name_line","idx","raw_exn","exn","Caml_js_exceptions","RE_EXN_ID","first_line","length","from_string","multiple_from_string","lst","_str","_acc","acc","trimmed","left","next","exn$1","hd","tl","multiple_helper","$$Array","List","a","x","get","pos","get_e","string_of_range","start_pos","end_pos","range","clade_ids","tree","TAG","clade_id","children","rep_ok","t","all_clade_ids","Caml_obj","Caml_primitive","clade_ids_uniq","Pervasives","counter","contents","empty","bootstrap","undefined","rank","name","is_empty","info","leaf","sci_name","scientific_name","leaf_no_params","zip_no_params","trees","printing","print_output","print_char","Char","print_string","s","print_endline","print_spaces","n","print_vert_helper","_ds","_pos","end_str","ds","h","print_verts","print_branch","print_tree_helper","_t_lst","d","t_lst","new_ds","get_base","i","j","msa","Dna$PhyloLibWeb","Caml_array","max_three","b","neighbors","d1","d2","r","mat","align","misalign","indel","fill_matrix","m","Math","imul","init_matrix","match","backtrack","acc1","acc2","cell","diff","aligned","s1","s2","len","diff$1","print_alignment_helper","i_finish","j_finish","dist_msa","gap","Msa$PhyloLibWeb","dist_matrix","Hashtbl","k","min_pos","dist","v","min_index","avg_helper","combine","average","Caml_option","remove","is_done","add_species","species","match$1","Tree$PhyloLibWeb","r$1","r$2","upgma","_dist","dist$1","Distance$PhyloLibWeb","tree_list","oc","print_f","Curry","Printf","_0","_1","print_tabs","print_start_tag","tag","attr","tabs","newline","_attr","space","print_attr","print_end_tag","print_inline_tag","print_inline_opt","print_phylo_helper","phylo","description","_children","print_children","Generate","currTree","setCurrTree","phyloTree","alignmentChecked","setAlignmentChecked","setTreeMethodChecked","dnaArr","setDnaArr","names","setNames","loading","setLoading","generateClicked","setGenerateClicked","phyloContainer","useRef","loadingIcon","LoadingOutlined","fontSize","spin","updateSeq","dna","concat","parseDNA","file","filename","reader","FileReader","onload","Dna","result","readAsText","scrollDown","window","scrollTo","behavior","top","current","offsetTop","scrollToPhylo","setTimeout","clean_file_name","split","slice","join","toUpperCase","fastaUploadProps","accept","action","headers","authorization","multiple","transformFile","file_name","onRemove","file_index","indexOf","splice","title","InfoCircleOutlined","display","flexDirection","checkedChildren","unCheckedChildren","defaultChecked","checked","event","UploadOutlined","onClick","job","urlencoded","URLSearchParams","append","dnaStr","fetch","method","body","redirect","then","response","text","waitStatus","numTries","aligned_dnas","Distance","PhyloAlgo","Tree","catch","error","dnas","Pairwise$PhyloLibWeb","disabled","indicator","treeXML","encodeURIComponent","downloadTreeLink","download","ref","is_word","String","word_token_map","make_stream_helper","is_file","stream","in_channel","Stream","param","char_stream","Error","get_next_line","val","s$1","lex_keyword","lex_keyword_helper","is_special_char","is_number","lex_number","Caml_format","tokenize_next_line","stream_of_line","exit","raw_exn$1","exit$1","$$SyntaxError","empty_phylo","empty_clade_attr","confidence","taxonomy","peek","consume_token","consume","token","Lexer$PhyloLibWeb","parse_words","w","add_assoc","consume_end_tag","add_attr","return_tag","tag_name","str_attr","num_attr","bool_attr","words","x$1","parse_start_tag","is_valid_tag","_tag","ignore_tag","parse_name","parse_description","descr","parse_float","f","parse_confidence","n$1","parse_id","parse_scientific_name","parse_taxonomy","_taxonomy","parse_clade","taxon","taxon$1","clade","from_phylo_helper","tokenizer","tokens_in_line","token_function","parse_phylogeny","from_phylo_str","Visualize","fileList","setFileList","currFile","setCurrFile","asciiPhylo","setasciiPhylo","currPhylo","setCurrPhylo","displayPhyloFile","PhyloParser","uploadProps","filePath","blob","DisplayPairwise","displayVisible","setDisplayVisible","alignment","setAlignment","exampleArr","setExampleArr","exampleFileNames","setExampleFileNames","arr","displayOnFinish","push","displayAlignment","score","Pairwise","pair","trim","files","map","Header","useBack","ArrowLeftOutlined","alignSelf","paddingRight","Page","App","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5191d3fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Popover } from 'antd';\r\nimport '../App.css';\r\n\r\nexport default function HoverVocab({ content, vocab, link, linkText }) {\r\n  return (\r\n    <Popover\r\n      className=\"hover-vocab\"\r\n      content={\r\n        <div>\r\n          {content}\r\n          <p>\r\n            See{' '}\r\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {linkText ? linkText : 'Wikipedia'}\r\n            </a>{' '}\r\n            for more details.\r\n          </p>\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n    >\r\n      <div>{vocab}</div>\r\n    </Popover>\r\n  );\r\n}\r\n","const influenza = `\r\n\r\nC\r\n|\r\no-SARS\r\n|\r\no-C\r\n  |\r\n  o-C\r\n  | |\r\n  | o-H6N1\r\n  | |\r\n  | o-C\r\n  |   |\r\n  |   o-H5N1\r\n  |   |\r\n  |   o-C\r\n  |     |\r\n  |     o-H3N2\r\n  |     |\r\n  |     o-C\r\n  |       |\r\n  |       o-H7N9\r\n  |       |\r\n  |       o-C\r\n  |         |\r\n  |         o-H1N1\r\n  |         |\r\n  |         o-H7N7\r\n  |\r\n  o-C\r\n    |\r\n    o-C\r\n    | |\r\n    | o-H2N3\r\n    | |\r\n    | o-H10N7\r\n    |\r\n    o-C\r\n      |\r\n      o-H3N1\r\n      |\r\n      o-H3N8\r\n\r\n`\r\n\r\nexport default influenza ","const cytochrome = `\r\nC\r\n|\r\no-C\r\n| |\r\n| o-FOLSOMIA PENICULA\r\n| |\r\n| o-C\r\n|   |\r\n|   o-ANOPHELES GABONENSIS\r\n|   |\r\n|   o-C\r\n|     |\r\n|     o-BRACHYTELES HYPOXANTHUS\r\n|     |\r\n|     o-C\r\n|       |\r\n|       o-PARIDES ANCHISES\r\n|       |\r\n|       o-PARIDES NEOPHILUS\r\n|\r\no-C\r\n  |\r\n  o-C\r\n  | |\r\n  | o-CONOGETHES PUNCTIFERALIS\r\n  | |\r\n  | o-GRAPHOLITA MOLESTA\r\n  |\r\n  o-C\r\n    |\r\n    o-PARIDES PRONEUS\r\n    |\r\n    o-PYTHIUM INSIDIOSUM\r\n`\r\n\r\nexport default cytochrome","const capsid = `\r\nC\r\n|\r\no-PEPPER VEINAL MOTTLE VIRUS\r\n|\r\no-C\r\n  |\r\n  o-C\r\n  | |\r\n  | o-BEAK AND FEATHER DISEASE\r\n  | |\r\n  | o-C\r\n  |   |\r\n  |   o-AVIAN NEPHRITIS VIRUS\r\n  |   |\r\n  |   o-C\r\n  |     |\r\n  |     o-C\r\n  |     | |\r\n  |     | o-C\r\n  |     | | |\r\n  |     | | o-DENGUE VIRUS\r\n  |     | | |\r\n  |     | | o-C\r\n  |     | |   |\r\n  |     | |   o-BOVINE VIRAL DIARRHEA VIRUS\r\n  |     | |   |\r\n  |     | |   o-HUMAN RHINOVIRUS\r\n  |     | |\r\n  |     | o-C\r\n  |     |   |\r\n  |     |   o-NOROVIRUS\r\n  |     |   |\r\n  |     |   o-C\r\n  |     |     |\r\n  |     |     o-FELINE IMMUNODEFICIENCY VIRUS\r\n  |     |     |\r\n  |     |     o-REDSPOTTED GROUPER NERVOUS NECROSIS VIRUS\r\n  |     |\r\n  |     o-C\r\n  |       |\r\n  |       o-HEPATITIS E\r\n  |       |\r\n  |       o-C\r\n  |         |\r\n  |         o-HEPATITIS C\r\n  |         |\r\n  |         o-NORWALK VIRUS\r\n  |\r\n  o-C\r\n    |\r\n    o-EASTERN EQUINE ENCEPHALITIS VIRUS\r\n    |\r\n    o-C\r\n      |\r\n      o-JAPANESE ENCEPHALITIS VIRUS\r\n      |\r\n      o-C\r\n        |\r\n        o-COXSACKIEVIRUS\r\n        |\r\n        o-SINDBIS VIRUS STRAIN\r\n`\r\nexport default capsid ","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Divider, Layout, Radio } from 'antd';\r\nimport { ArrowDownOutlined } from '@ant-design/icons';\r\nimport '../App.css';\r\nimport HoverVocab from './HoverVocab';\r\nimport influenza from '../ocaml_src/Examples/Influenza.js';\r\nimport cytochrome_c from '../ocaml_src/Examples/cytochrome_c.js';\r\nimport capsid from '../ocaml_src/Examples/Capsid.js';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default function HomeContents() {\r\n  const [PhyloTree, setPhyloTree] = useState(cytochrome_c);\r\n  const [phyloVisible, setPhyloVisible] = useState(true);\r\n\r\n  const changeGenerateExamples = (e) => {\r\n    switch (e.target.value) {\r\n      case 'Influenza A Viruses':\r\n        setPhyloTree(influenza);\r\n        break;\r\n      case 'COXII':\r\n        setPhyloTree(cytochrome_c);\r\n        break;\r\n      case 'Virus Capsid':\r\n        setPhyloVisible(true);\r\n        console.log(capsid);\r\n        setPhyloTree(capsid);\r\n        break;\r\n    }\r\n  };\r\n\r\n  console.log(process.env.PUBLIC_URL);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Content justify=\"center\">\r\n        <div className=\"home\">\r\n          <Row className=\"intro\" justify=\"center\">\r\n            <div>\r\n              <h1>Welcome to PhyloML</h1>\r\n              <h2>A phylogenetic library written in OCaml.</h2>\r\n              <h2>\r\n                Inferring Evolutionary History through Modern Genetic\r\n                Similarity.\r\n              </h2>\r\n            </div>\r\n          </Row>\r\n          <Row justify=\"center\" gutter={[16, 40]}>\r\n            <Col lg={7} md={10} sm={12}>\r\n              <Link className=\"offset\" to=\"/pairwise\">\r\n                Visualize Pairwise DNA Alignments\r\n              </Link>\r\n            </Col>\r\n            <Col lg={7} md={10} sm={12}>\r\n              <Link className=\"offset\" to=\"/visualize\">\r\n                Visualize Phylogenetic Trees\r\n              </Link>\r\n            </Col>\r\n            <Col lg={7} md={10} sm={12}>\r\n              <Link className=\"offset\" to=\"/generate\">\r\n                Generate Phylogenetic Trees\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"horizontally-centered home-down\">\r\n            <a href=\"#explanation\">\r\n              <Button\r\n                shape=\"circle\"\r\n                icon={<ArrowDownOutlined />}\r\n                size=\"large\"\r\n                style={{\r\n                  backgroundColor: '#c3efd9',\r\n                  borderColor: '#000000',\r\n                  color: '#000000',\r\n                }}\r\n              ></Button>\r\n            </a>\r\n          </Row>\r\n        </div>\r\n        <div className=\"explanation\" id=\"explanation\">\r\n          <Row justify=\"center\">\r\n            <Divider />\r\n            <h1> Explanations and Examples </h1>\r\n          </Row>\r\n          <Row>\r\n            <h2> About Phylogenetic Trees: </h2>\r\n            <h3>\r\n              {' '}\r\n              Scientists often wish to infer the evolutionary history between\r\n              different organisms. Historically, in order to determine the\r\n              closeness of species such as birds or fish, the similarity in\r\n              physical characteristics was analyzed. With the advent of modern\r\n              computers and DNA analysis, the field has moved towards using DNA\r\n              similarity. Two species with more similar DNA are assumed to be\r\n              more closely related. By analyzing these similarities and\r\n              differences in the DNA, we can generate a hypothetical\r\n              evolutionary tree, called a{' '}\r\n              <HoverVocab\r\n                content={\r\n                  <p>\r\n                    A tree that displays the evolutionary relationships between\r\n                    various organisms.\r\n                  </p>\r\n                }\r\n                vocab=\"phylogenetic tree\"\r\n                link=\"https://www.khanacademy.org/science/high-school-biology/hs-evolution/hs-phylogeny/a/phylogenetic-trees\"\r\n                linkText=\"Khan Academy\"\r\n              />\r\n              , that estimates what the historical evolutionary tree would have\r\n              looked like.\r\n            </h3>\r\n\r\n            <h2> Functionality: </h2>\r\n\r\n            <h3>\r\n              <b> Visualize Pairwise Alignment: </b>\r\n              At the heart of constructing phylogenetic trees is sequence\r\n              alignment, where gaps are inserted in the sequences to make them\r\n              all of equal length, to get a similarity score. Only once the\r\n              alignment scores of all DNA sequences with one another is known is\r\n              it possible to determine genetic similarity and through that,\r\n              evolutionary history.<br></br>\r\n              One such method is the pairwise alignment, where two DNA sequences\r\n              are aligned. It is performed using the Needleman-Wunsch algorithm,\r\n              a globally optimal dynamic programming algorithm that computes a\r\n              loss for the most optimal alignment. Here{' '}\r\n              <span className=\"highlight\">*</span> represents a DNA base pair\r\n              match, <span className=\"highlight\">_</span> a gap, often used if a\r\n              DNA sequence is shorter than the other, and{' '}\r\n              <span className=\"highlight\">|</span> a mismatch.\r\n            </h3>\r\n            <br></br>\r\n            <h3>\r\n              <b> Visualize Phylogenetic Trees: </b>\r\n              When a phylogenetic tree has already been constructed, whether\r\n              through this program or other commercially available software, it\r\n              is important that the user can visualize the final alignment. Here\r\n              we built a tokenizer, lexer, and parser to read PhyloXML, an\r\n              extension of the popular XML format designed to encode\r\n              phylogenetic trees.\r\n            </h3>\r\n            <br></br>\r\n            <h3>\r\n              <b> Generate Phylogenetic Trees: </b>\r\n              We construct phylogenetic genetic trees from DNA sequences encoded\r\n              in a standard .FASTA format using two algorithms: Unweighted Pair\r\n              Group Method with Arithmetic Mean (UPGMA) and Bayesian Inference,\r\n              each with their respective tradeoffs regarding speed and accuracy.\r\n              Each algorithm reads in the .FASTA files, constructs pairwise\r\n              alignments, and then uses respective techniques to find an optimal\r\n              rooted tree.<br></br>\r\n              The first step in{' '}\r\n              <HoverVocab\r\n                vocab=\"UPGMA\"\r\n                link=\"https://en.wikipedia.org/wiki/UPGMA\"\r\n                linkText=\"the Wikipedia page\"\r\n              />{' '}\r\n              consists of creating an <i>n</i> by <i>n</i> distance matrix which\r\n              records the{' '}\r\n              <HoverVocab\r\n                vocab=\"genetic distance\"\r\n                link=\"https://en.wikipedia.org/wiki/Genetic_distance\"\r\n                linkText=\"the Wikipedia page on genetic distance measures\"\r\n              />{' '}\r\n              between each pair of sequences in the alignment. Then, we pick the\r\n              2 sequeneces with the least distance and combine them to form a\r\n              'clade' (a branching point in the tree). Then we do the same thing\r\n              with the next two most similar sequences. We keep doing this until\r\n              we are left with one clade - our final phylogenetic tree.{' '}\r\n              <br></br>\r\n              The essence of{' '}\r\n              <HoverVocab\r\n                vocab=\"Bayesian inference\"\r\n                link=\"https://www.sciencemag.org/site/feature/data/1050262.pdf\"\r\n                linkText=\"a paper on phylogenetic Bayesian inference\"\r\n              />{' '}\r\n              is using prior information about the genetic data to predict the\r\n              likelihood that a certain tree is the correct phylogenetic tree,\r\n              given our aligned sequence data. Since finding this likelihood for\r\n              every possible tree structure takes an unfeasibly large amount of\r\n              time, we use a technique called{' '}\r\n              <HoverVocab\r\n                vocab=\"Markov Chain Monte Carlo sampling\"\r\n                link=\"http://pages.stat.wisc.edu/~larget/phylogeny/larget-simon-MBE-1999.pdf\"\r\n                linkText=\"a paper on phylogenetic MCMC methods\"\r\n              />{' '}\r\n              to construct a chain of trees and get a sample of the final tree\r\n              distribution. By getting a sample of the tree distribution, we can\r\n              find out the most likely phylogenetic tree given our genetic data.\r\n              The advantage of this method is that it can be tweaked\r\n              considerably to account for various genetic substituion models,\r\n              based on the existing knowledge that we have about the genetic\r\n              sequences. It is, however, slower than UPGMA.\r\n            </h3>\r\n          </Row>\r\n\r\n          <h2> Examples: </h2>\r\n\r\n          <h3>\r\n            Examples of constructed phylogenetic trees using DNA sequences from\r\n            the National Center for Biotechnology Information (NCBI).\r\n          </h3>\r\n          <Row className=\"centered-content\">\r\n            <Radio.Group onChange={changeGenerateExamples} defaultValue=\"COXII\">\r\n              <Radio.Button value=\"Virus Capsid\">\r\n                Virus Capsid Gene\r\n              </Radio.Button>\r\n              <Radio.Button value=\"COXII\">\r\n                Cytochrome C Oxidase Subunit II\r\n              </Radio.Button>\r\n              <Radio.Button value=\"Influenza A Viruses\">\r\n                Influenza A PB-2\r\n              </Radio.Button>\r\n            </Radio.Group>\r\n          </Row>\r\n          {phyloVisible ? (\r\n            <Row justify=\"center\">\r\n              <div className=\"ascii-phylo-container\">\r\n                <p className=\"ascii-phylo\">{PhyloTree}</p>\r\n              </div>\r\n            </Row>\r\n          ) : null}\r\n        </div>\r\n      </Content>\r\n    </div>\r\n  );\r\n}\r\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as $$Buffer from \"bs-platform/lib/es6/buffer.js\";\nimport * as Stream from \"bs-platform/lib/es6/stream.js\";\nimport * as $$String from \"bs-platform/lib/es6/string.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_exceptions from \"bs-platform/lib/es6/caml_exceptions.js\";\nimport * as Caml_js_exceptions from \"bs-platform/lib/es6/caml_js_exceptions.js\";\n\nvar Empty = Caml_exceptions.create(\"Dna-PhyloLibWeb.Empty\");\n\nfunction is_name_line(str) {\n  return $$String.sub(str, 0, 1) === \">\";\n}\n\nfunction is_dna(c) {\n  if (c >= 72) {\n    if (c !== 84) {\n      return c === 95;\n    } else {\n      return true;\n    }\n  }\n  if (c === 45) {\n    return true;\n  }\n  if (c < 65) {\n    return false;\n  }\n  switch (c - 65 | 0) {\n    case 1 :\n    case 3 :\n    case 4 :\n    case 5 :\n        return false;\n    case 0 :\n    case 2 :\n    case 6 :\n        return true;\n    \n  }\n}\n\nfunction is_protein(c) {\n  var switcher = c - 65 | 0;\n  if (switcher > 13 || switcher < 0) {\n    return !(switcher > 25 || switcher < 15);\n  } else {\n    return switcher !== 9;\n  }\n}\n\nfunction parse_line(str, dna_seq) {\n  var str$1 = $$String.uppercase_ascii(str);\n  return $$String.iter((function (c) {\n                if (is_dna(c) || is_protein(c)) {\n                  return $$Buffer.add_char(dna_seq, c);\n                }\n                \n              }), str$1);\n}\n\nfunction parse_first_line(dna_stream) {\n  var v = Stream.peek(dna_stream);\n  if (v !== undefined) {\n    if (is_name_line(v)) {\n      return Stream.junk(dna_stream);\n    } else {\n      return ;\n    }\n  }\n  throw {\n        RE_EXN_ID: Empty,\n        Error: new Error()\n      };\n}\n\nvar to_string = $$Buffer.contents;\n\nfunction from_fasta(init_sizeOpt, loc) {\n  var init_size = init_sizeOpt !== undefined ? init_sizeOpt : 16384;\n  var f = Pervasives.open_in(loc);\n  var read_line = function (i) {\n    try {\n      return Pervasives.input_line(f);\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn.RE_EXN_ID === \"End_of_file\") {\n        return ;\n      }\n      throw exn;\n    }\n  };\n  var dna_stream = Stream.from(read_line);\n  parse_first_line(dna_stream);\n  var dna_seq = $$Buffer.create(init_size);\n  Stream.iter((function (str) {\n          return parse_line(str, dna_seq);\n        }), dna_stream);\n  return dna_seq;\n}\n\nfunction trim_name_line(str) {\n  var idx;\n  try {\n    idx = $$String.index(str, /* \"\\n\" */10);\n  }\n  catch (raw_exn){\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n    if (exn.RE_EXN_ID === \"Not_found\") {\n      idx = 0;\n    } else {\n      throw exn;\n    }\n  }\n  var first_line = $$String.sub(str, 0, idx);\n  if (first_line === \"\" || is_name_line(first_line)) {\n    return $$String.sub(str, idx + 1 | 0, (str.length - idx | 0) - 1 | 0);\n  } else {\n    return str;\n  }\n}\n\nfunction from_string(str) {\n  var dna_seq = $$Buffer.create(128);\n  parse_line(trim_name_line(str), dna_seq);\n  return dna_seq;\n}\n\nvar length = $$Buffer.length;\n\nfunction multiple_helper(_str, _acc) {\n  while(true) {\n    var acc = _acc;\n    var str = _str;\n    if (!is_name_line(str)) {\n      return acc;\n    }\n    var trimmed = trim_name_line(str);\n    var idx;\n    try {\n      idx = $$String.index(trimmed, /* \">\" */62);\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn.RE_EXN_ID === \"Not_found\") {\n        idx = trimmed.length - 1 | 0;\n      } else {\n        throw exn;\n      }\n    }\n    var next = $$String.sub(trimmed, 0, idx);\n    var left;\n    try {\n      left = $$String.sub(trimmed, idx, trimmed.length - idx | 0);\n    }\n    catch (exn$1){\n      left = \"\";\n    }\n    var dna_seq = $$Buffer.create(128);\n    parse_line(next, dna_seq);\n    _acc = {\n      hd: dna_seq,\n      tl: acc\n    };\n    _str = left;\n    continue ;\n  };\n}\n\nfunction multiple_from_string(str) {\n  var lst = multiple_helper(str, /* [] */0);\n  return $$Array.of_list(List.fold_left((function (a, x) {\n                    return {\n                            hd: x,\n                            tl: a\n                          };\n                  }), /* [] */0, lst));\n}\n\nfunction is_empty(dna_seq) {\n  return $$Buffer.length(dna_seq) === 0;\n}\n\nfunction get(dna_seq, pos) {\n  try {\n    return $$Buffer.nth(dna_seq, pos);\n  }\n  catch (exn){\n    return ;\n  }\n}\n\nvar get_e = $$Buffer.nth;\n\nfunction string_of_range(dna_seq, start_pos, end_pos) {\n  var range = end_pos - start_pos | 0;\n  return $$Buffer.sub(dna_seq, start_pos, range);\n}\n\nexport {\n  Empty ,\n  from_fasta ,\n  from_string ,\n  multiple_from_string ,\n  is_empty ,\n  length ,\n  get ,\n  get_e ,\n  string_of_range ,\n  to_string ,\n  \n}\n/* No side effect */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Char from \"bs-platform/lib/es6/char.js\";\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_primitive from \"bs-platform/lib/es6/caml_primitive.js\";\nimport * as Caml_exceptions from \"bs-platform/lib/es6/caml_exceptions.js\";\n\nvar UnknownClade = Caml_exceptions.create(\"Tree-PhyloLibWeb.UnknownClade\");\n\nfunction clade_ids(tree) {\n  if (tree.TAG) {\n    return /* [] */0;\n  } else {\n    return {\n            hd: tree.clade_id,\n            tl: List.flatten(List.map(clade_ids, tree.children))\n          };\n  }\n}\n\nfunction clade_ids_uniq(t) {\n  var all_clade_ids = clade_ids(t);\n  return Caml_obj.caml_equal(List.sort_uniq(Caml_primitive.caml_int_compare, all_clade_ids), List.sort(Caml_primitive.caml_int_compare, all_clade_ids));\n}\n\nfunction rep_ok(t) {\n  if (clade_ids_uniq(t)) {\n    return t;\n  } else {\n    return Pervasives.failwith(\"clade_ids not unique\");\n  }\n}\n\nvar counter = {\n  contents: 0\n};\n\nvar empty_0 = (counter.contents = counter.contents + 1 | 0, counter.contents);\n\nvar empty = {\n  TAG: /* Clade */0,\n  clade_id: empty_0,\n  children: /* [] */0,\n  bootstrap: undefined,\n  rank: undefined,\n  id: undefined,\n  name: undefined\n};\n\nfunction is_empty(info) {\n  if (info.TAG || !(info.children === /* [] */0 && info.bootstrap === undefined && info.rank === undefined && info.id === undefined)) {\n    return false;\n  } else {\n    return info.name === undefined;\n  }\n}\n\nfunction leaf(sci_name, id, name) {\n  return {\n          TAG: /* Leaf */1,\n          scientific_name: sci_name,\n          id: id,\n          name: name\n        };\n}\n\nfunction leaf_no_params(sci_name) {\n  return {\n          TAG: /* Leaf */1,\n          scientific_name: sci_name,\n          id: undefined,\n          name: undefined\n        };\n}\n\nfunction size_helper(tree, size) {\n  if (tree.TAG) {\n    return size + 1 | 0;\n  }\n  var match = tree.children;\n  if (match) {\n    return 1 + List.fold_left((function (acc, x) {\n                  return acc + size_helper(x, size) | 0;\n                }), 0, {\n                hd: match.hd,\n                tl: match.tl\n              }) | 0;\n  } else {\n    return size;\n  }\n}\n\nfunction size(tree) {\n  return size_helper(tree, 0);\n}\n\nfunction zip(trees, bootstrap, rank, parsed_id, name) {\n  if (empty.TAG) {\n    return Pervasives.failwith(\"Representation invariant broken\");\n  } else {\n    return rep_ok({\n                TAG: /* Clade */0,\n                clade_id: (counter.contents = counter.contents + 1 | 0, counter.contents),\n                children: trees,\n                bootstrap: bootstrap,\n                rank: rank,\n                id: parsed_id,\n                name: name\n              });\n  }\n}\n\nfunction zip_no_params(trees) {\n  if (empty.TAG) {\n    return Pervasives.failwith(\"Representation invariant broken\");\n  } else {\n    return rep_ok({\n                TAG: /* Clade */0,\n                clade_id: (counter.contents = counter.contents + 1 | 0, counter.contents),\n                children: trees,\n                bootstrap: undefined,\n                rank: undefined,\n                id: undefined,\n                name: undefined\n              });\n  }\n}\n\nfunction hierarchy(a, b) {\n  if (a.TAG) {\n    if (b.TAG) {\n      return Caml_primitive.caml_string_compare(a.scientific_name, b.scientific_name);\n    } else {\n      return -1;\n    }\n  } else if (b.TAG) {\n    return 1;\n  } else {\n    return Caml_primitive.caml_int_compare(a.clade_id, b.clade_id);\n  }\n}\n\nfunction is_equal(a, b) {\n  if (a.TAG) {\n    if (b.TAG) {\n      return a.scientific_name === b.scientific_name;\n    } else {\n      return false;\n    }\n  }\n  if (b.TAG) {\n    return false;\n  }\n  var s1 = List.sort(hierarchy, a.children);\n  var s2 = List.sort(hierarchy, b.children);\n  var _a = s1;\n  var _b = s2;\n  var _acc = true;\n  while(true) {\n    var acc = _acc;\n    var b$1 = _b;\n    var a$1 = _a;\n    if (acc === false) {\n      return false;\n    }\n    if (!a$1) {\n      if (b$1) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    if (!b$1) {\n      return false;\n    }\n    _acc = is_equal(a$1.hd, b$1.hd);\n    _b = b$1.tl;\n    _a = a$1.tl;\n    continue ;\n  };\n}\n\nfunction mem(s, t) {\n  if (t.TAG) {\n    return t.scientific_name === s;\n  } else {\n    return List.fold_left((function (acc, tree) {\n                  if (acc) {\n                    return true;\n                  } else {\n                    return mem(s, tree);\n                  }\n                }), false, t.children);\n  }\n}\n\nvar printing = {\n  contents: true\n};\n\nvar print_output = {\n  contents: \"\"\n};\n\nfunction print_char(c) {\n  if (printing.contents) {\n    return Pervasives.print_char(c);\n  } else {\n    print_output.contents = print_output.contents + Char.escaped(c);\n    return ;\n  }\n}\n\nfunction print_string(s) {\n  if (printing.contents) {\n    return Pervasives.print_string(s);\n  } else {\n    print_output.contents = print_output.contents + s;\n    return ;\n  }\n}\n\nfunction print_endline(s) {\n  if (printing.contents) {\n    console.log(s);\n    return ;\n  } else {\n    return print_string(s + \"\\n\");\n  }\n}\n\nfunction print_spaces(n) {\n  for(var x = 1; x <= n; ++x){\n    print_char(/* \" \" */32);\n  }\n  \n}\n\nfunction print_vert_helper(_ds, _pos, end_str) {\n  while(true) {\n    var pos = _pos;\n    var ds = _ds;\n    if (!ds) {\n      return ;\n    }\n    var t = ds.tl;\n    var h = ds.hd;\n    if (h === pos && h !== 0) {\n      print_spaces(1);\n    } else {\n      print_spaces(((h - pos | 0) << 1) + (\n            h === 0 || pos === 0 ? 0 : 1\n          ) | 0);\n    }\n    if (t === /* [] */0) {\n      print_string(end_str);\n    } else {\n      print_char(/* \"|\" */124);\n    }\n    _pos = h + 1 | 0;\n    _ds = t;\n    continue ;\n  };\n}\n\nfunction print_verts(ds) {\n  print_vert_helper(List.rev(ds), 0, \"|\");\n  return print_endline(\"\");\n}\n\nfunction print_branch(ds) {\n  if (ds) {\n    return print_vert_helper(List.rev(ds), 0, \"o-\");\n  } else {\n    return Pervasives.invalid_arg(\"ds\");\n  }\n}\n\nfunction print_tree_helper(_t_lst, d, ds) {\n  while(true) {\n    var t_lst = _t_lst;\n    if (!t_lst) {\n      return ;\n    }\n    var t = t_lst.tl;\n    var h = t_lst.hd;\n    if (h.TAG) {\n      if (ds !== /* [] */0) {\n        print_verts(ds);\n      } else {\n        Pervasives.print_newline(undefined);\n      }\n      if (ds !== /* [] */0) {\n        print_branch(ds);\n      }\n      var n = h.name;\n      if (n !== undefined && h.scientific_name === \"Unnamed\") {\n        print_endline(n);\n      } else {\n        print_endline(h.scientific_name);\n      }\n      _t_lst = t;\n      continue ;\n    }\n    var new_ds = t !== /* [] */0 ? ({\n          hd: d,\n          tl: ds\n        }) : (\n        ds ? ({\n              hd: d,\n              tl: ds.tl\n            }) : ({\n              hd: d,\n              tl: /* [] */0\n            })\n      );\n    if (ds !== /* [] */0) {\n      print_verts(ds);\n    }\n    if (ds !== /* [] */0) {\n      print_branch(ds);\n    }\n    print_string(\"C\\n\");\n    print_tree_helper(h.children, d + 1 | 0, new_ds);\n    _t_lst = t;\n    continue ;\n  };\n}\n\nfunction to_string(t) {\n  print_output.contents = \"\";\n  printing.contents = false;\n  print_tree_helper({\n        hd: t,\n        tl: /* [] */0\n      }, 0, /* [] */0);\n  return print_output.contents;\n}\n\nfunction print_tree(t) {\n  printing.contents = true;\n  return print_tree_helper({\n              hd: t,\n              tl: /* [] */0\n            }, 0, /* [] */0);\n}\n\nexport {\n  UnknownClade ,\n  empty ,\n  is_empty ,\n  leaf ,\n  leaf_no_params ,\n  size ,\n  zip ,\n  zip_no_params ,\n  mem ,\n  is_equal ,\n  to_string ,\n  print_tree ,\n  \n}\n/* empty Not a pure module */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Dna$PhyloLibWeb from \"./dna.bs.js\";\n\nfunction num_seq(msa) {\n  return msa.length;\n}\n\nfunction seq_len(msa) {\n  return Dna$PhyloLibWeb.length(Caml_array.caml_array_get(msa, 0));\n}\n\nfunction align(dnas) {\n  return dnas;\n}\n\nfunction get_seq(i, msa) {\n  return Caml_array.caml_array_get(msa, i);\n}\n\nfunction get_base(i, j, msa) {\n  var c = Dna$PhyloLibWeb.get(Caml_array.caml_array_get(msa, i), j);\n  if (c !== undefined) {\n    return c;\n  } else {\n    return Pervasives.failwith(\"Index out of bounds\");\n  }\n}\n\nexport {\n  align ,\n  num_seq ,\n  seq_len ,\n  get_seq ,\n  get_base ,\n  \n}\n/* No side effect */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Char from \"bs-platform/lib/es6/char.js\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_primitive from \"bs-platform/lib/es6/caml_primitive.js\";\nimport * as Dna$PhyloLibWeb from \"./dna.bs.js\";\n\nfunction max_three(a, b, c) {\n  return Caml_obj.caml_max(Caml_obj.caml_max(a, b), c);\n}\n\nfunction init_matrix(d1, d2, indel, m, n) {\n  var mat = $$Array.make_matrix(m, n, -1000000000);\n  for(var r = 0; r < m; ++r){\n    Caml_array.caml_array_set(Caml_array.caml_array_get(mat, r), 0, Math.imul(r, indel));\n  }\n  for(var c = 0; c < n; ++c){\n    Caml_array.caml_array_set(Caml_array.caml_array_get(mat, 0), c, Math.imul(c, indel));\n  }\n  return mat;\n}\n\nfunction neighbors(d1, d2, r, c, mat, align, misalign, indel) {\n  var left = c.contents < 1 ? -1000000000 : indel + Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents), c.contents - 1 | 0) | 0;\n  var up = r.contents < 1 ? -1000000000 : indel + Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents - 1 | 0), c.contents) | 0;\n  var diagonal = r.contents < 1 || c.contents < 1 ? -1000000000 : Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents - 1 | 0), c.contents - 1 | 0) + (\n      Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d1, (\n                0 > r.contents ? 0 : r.contents\n              ) - 1 | 0), Dna$PhyloLibWeb.get(d2, (\n                0 > c.contents ? 0 : c.contents\n              ) - 1 | 0)) ? align : misalign\n    ) | 0;\n  return [\n          left,\n          up,\n          diagonal\n        ];\n}\n\nfunction fill_matrix(d1, d2, align, misalign, indel, m, n) {\n  var mat = init_matrix(d1, d2, indel, m, n);\n  for(var r = 1; r < m; ++r){\n    for(var c = 1; c < n; ++c){\n      var match = neighbors(d1, d2, {\n            contents: r\n          }, {\n            contents: c\n          }, mat, align, misalign, indel);\n      Caml_array.caml_array_set(Caml_array.caml_array_get(mat, r), c, max_three(match[0], match[1], match[2]));\n    }\n  }\n  return mat;\n}\n\nfunction backtrack(d1, d2, mat, align, misalign, indel) {\n  var r = {\n    contents: Dna$PhyloLibWeb.length(d1)\n  };\n  var c = {\n    contents: Dna$PhyloLibWeb.length(d2)\n  };\n  var acc1 = \"\";\n  var acc2 = \"\";\n  while(r.contents > 0 || c.contents > 0) {\n    var match = neighbors(d1, d2, r, c, mat, align, misalign, indel);\n    var cell = Caml_array.caml_array_get(Caml_array.caml_array_get(mat, r.contents), c.contents);\n    if (cell === match[2]) {\n      acc1 = Char.escaped(Dna$PhyloLibWeb.get_e(d1, r.contents - 1 | 0)) + acc1;\n      acc2 = Char.escaped(Dna$PhyloLibWeb.get_e(d2, c.contents - 1 | 0)) + acc2;\n      r.contents = r.contents - 1 | 0;\n      c.contents = c.contents - 1 | 0;\n    } else if (cell === match[0]) {\n      acc1 = \"_\" + acc1;\n      acc2 = Char.escaped(Dna$PhyloLibWeb.get_e(d2, c.contents - 1 | 0)) + acc2;\n      c.contents = c.contents - 1 | 0;\n    } else if (cell === match[1]) {\n      acc2 = \"_\" + acc2;\n      acc1 = Char.escaped(Dna$PhyloLibWeb.get_e(d1, r.contents - 1 | 0)) + acc1;\n      r.contents = r.contents - 1 | 0;\n    } else {\n      Pervasives.failwith(\"This should not happen\");\n    }\n  };\n  return [\n          Dna$PhyloLibWeb.from_string(acc1),\n          Dna$PhyloLibWeb.from_string(acc2)\n        ];\n}\n\nfunction align_pair(d1, d2, align, misalign, indel) {\n  var m = Dna$PhyloLibWeb.length(d1) + 1 | 0;\n  var n = Dna$PhyloLibWeb.length(d2) + 1 | 0;\n  var mat = fill_matrix(d1, d2, align, misalign, indel, m, n);\n  var score = Caml_array.caml_array_get(Caml_array.caml_array_get(mat, m - 1 | 0), n - 1 | 0);\n  var alignment = backtrack(d1, d2, mat, align, misalign, indel);\n  return [\n          alignment,\n          score\n        ];\n}\n\nfunction diff(d1, d2, align, misalign, indel) {\n  var m = Dna$PhyloLibWeb.length(d1) + 1 | 0;\n  var n = Dna$PhyloLibWeb.length(d2) + 1 | 0;\n  var mat = fill_matrix(d1, d2, align, misalign, indel, m, n);\n  var aligned = backtrack(d1, d2, mat, align, misalign, indel);\n  var s1 = Caml_array.caml_array_get(aligned, 0);\n  var s2 = Caml_array.caml_array_get(aligned, 1);\n  var len = Dna$PhyloLibWeb.length(s1);\n  var diff$1 = 0;\n  for(var r = 0; r < len; ++r){\n    if (Caml_obj.caml_equal(Dna$PhyloLibWeb.get(s1, r), /* \"_\" */95) || Caml_obj.caml_equal(Dna$PhyloLibWeb.get(s2, r), /* \"_\" */95)) {\n      diff$1 = diff$1 - indel | 0;\n    } else if (Caml_obj.caml_notequal(Dna$PhyloLibWeb.get(s1, r), Dna$PhyloLibWeb.get(s2, r))) {\n      diff$1 = diff$1 + 1 | 0;\n    }\n    \n  }\n  return diff$1;\n}\n\nvar printing = {\n  contents: true\n};\n\nvar print_output = {\n  contents: \"\"\n};\n\nfunction print_char(c) {\n  if (printing.contents) {\n    return Pervasives.print_char(c);\n  } else {\n    print_output.contents = print_output.contents + Char.escaped(c);\n    return ;\n  }\n}\n\nfunction print_endline(s) {\n  if (printing.contents) {\n    console.log(s);\n  } else {\n    print_output.contents = print_output.contents + (s + \"\\n\");\n  }\n  \n}\n\nfunction print_alignment_helper(d1, d2) {\n  var n = Dna$PhyloLibWeb.length(d1);\n  for(var i = 0 ,i_finish = (n - 1 | 0) / 80 | 0; i <= i_finish; ++i){\n    print_endline(Dna$PhyloLibWeb.string_of_range(d1, Math.imul(80, i), Caml_primitive.caml_int_min(n, Math.imul(80, i + 1 | 0))));\n    for(var j = Math.imul(80, i) ,j_finish = Caml_primitive.caml_int_min(n - 1 | 0, Math.imul(80, i + 1 | 0) - 1 | 0); j <= j_finish; ++j){\n      if (Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d1, j), Dna$PhyloLibWeb.get(d2, j))) {\n        print_char(/* \"*\" */42);\n      } else if (Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d1, j), /* \"_\" */95) || Caml_obj.caml_equal(Dna$PhyloLibWeb.get(d2, j), /* \"_\" */95)) {\n        print_char(/* \" \" */32);\n      } else {\n        print_char(/* \"|\" */124);\n      }\n    }\n    print_endline(\"\");\n    print_endline(Dna$PhyloLibWeb.string_of_range(d2, Math.imul(80, i), Caml_primitive.caml_int_min(n, Math.imul(80, i + 1 | 0))));\n    print_endline(\"\");\n  }\n  \n}\n\nfunction print_alignment(d1, d2) {\n  printing.contents = true;\n  return print_alignment_helper(d1, d2);\n}\n\nfunction to_string(d1, d2) {\n  print_output.contents = \"\";\n  printing.contents = false;\n  print_alignment_helper(d1, d2);\n  return print_output.contents;\n}\n\nexport {\n  align_pair ,\n  diff ,\n  print_alignment ,\n  to_string ,\n  \n}\n/* No side effect */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Hashtbl from \"bs-platform/lib/es6/hashtbl.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Msa$PhyloLibWeb from \"./msa.bs.js\";\nimport * as Pairwise$PhyloLibWeb from \"./pairwise.bs.js\";\n\nfunction dist_dna(dnas, align, misalign, indel) {\n  var m = dnas.length;\n  var dist_matrix = Hashtbl.create(undefined, m);\n  for(var i = 0; i < m; ++i){\n    for(var j = i + 1 | 0; j < m; ++j){\n      Hashtbl.add(dist_matrix, [\n            i,\n            j\n          ], Pairwise$PhyloLibWeb.diff(Caml_array.caml_array_get(dnas, i), Caml_array.caml_array_get(dnas, j), align, misalign, indel));\n    }\n  }\n  return dist_matrix;\n}\n\nfunction dist_msa(msa, gap) {\n  var m = Msa$PhyloLibWeb.num_seq(msa);\n  Pervasives.print_int(m);\n  var n = Msa$PhyloLibWeb.seq_len(msa);\n  Pervasives.print_int(n);\n  var dist_matrix = Hashtbl.create(undefined, m);\n  for(var i = 0; i < m; ++i){\n    var diff = 0;\n    for(var j = i + 1 | 0; j < m; ++j){\n      for(var k = 0; k < n; ++k){\n        Pervasives.print_int(i);\n        if (Msa$PhyloLibWeb.get_base(i, k, msa) === /* \"_\" */95 || Msa$PhyloLibWeb.get_base(j, k, msa) === /* \"_\" */95) {\n          diff = diff + gap | 0;\n        } else if (Msa$PhyloLibWeb.get_base(i, k, msa) !== Msa$PhyloLibWeb.get_base(j, k, msa)) {\n          diff = diff + 1 | 0;\n        }\n        \n      }\n      Hashtbl.add(dist_matrix, [\n            i,\n            j\n          ], diff);\n    }\n  }\n  return dist_matrix;\n}\n\nfunction min_pos(dist) {\n  if (Hashtbl.length(dist) === 0) {\n    return [\n            [\n              0,\n              0\n            ],\n            0\n          ];\n  }\n  var acc_0 = [\n    0,\n    0\n  ];\n  var acc = [\n    acc_0,\n    Pervasives.max_float\n  ];\n  return Hashtbl.fold((function (k, v, acc) {\n                if (v < acc[1]) {\n                  return [\n                          k,\n                          v\n                        ];\n                } else {\n                  return acc;\n                }\n              }), dist, acc);\n}\n\nfunction min_diff(dist) {\n  return min_pos(dist)[1];\n}\n\nfunction min_index(dist) {\n  return min_pos(dist)[0];\n}\n\nfunction diff(index, dist) {\n  return Hashtbl.find(dist, index);\n}\n\nfunction remove(i, dist) {\n  return Hashtbl.filter_map_inplace((function (k, v) {\n                if (Caml_obj.caml_equal(k[0], i) || Caml_obj.caml_equal(k[1], i)) {\n                  return ;\n                } else {\n                  return Caml_option.some(v);\n                }\n              }), dist);\n}\n\nfunction avg_helper(j, k, dist) {\n  return Hashtbl.find(dist, [\n              Caml_obj.caml_min(j, k),\n              Caml_obj.caml_max(j, k)\n            ]);\n}\n\nfunction average(i, j, dist) {\n  var avg = function (k, v) {\n    if (k[0] === i) {\n      var other = k[1];\n      var v_val = v + avg_helper(other, i, dist);\n      return v_val / 2;\n    }\n    if (k[1] !== i) {\n      return v;\n    }\n    var other$1 = k[0];\n    return (v + avg_helper(other$1, i, dist)) / 2;\n  };\n  return Hashtbl.filter_map_inplace(avg, dist);\n}\n\nfunction combine(i, j, dist) {\n  if (i >= j) {\n    Pervasives.failwith(\"invalid input\");\n  } else {\n    average(i, j, dist);\n  }\n  remove(j, dist);\n  return dist;\n}\n\nfunction dim(dist) {\n  return Hashtbl.fold((function (k, v, acc) {\n                if (k[0] === 0) {\n                  return acc + 1 | 0;\n                } else {\n                  return acc;\n                }\n              }), dist, 1);\n}\n\nfunction is_done(dist) {\n  return Hashtbl.length(dist) === 0;\n}\n\nexport {\n  dist_dna ,\n  dist_msa ,\n  min_index ,\n  min_diff ,\n  diff ,\n  combine ,\n  dim ,\n  is_done ,\n  \n}\n/* No side effect */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Tree$PhyloLibWeb from \"./tree.bs.js\";\nimport * as Distance$PhyloLibWeb from \"./distance.bs.js\";\n\nfunction add_species(species, i, j, acc) {\n  var s1 = Caml_array.caml_array_get(species, i);\n  var s2 = Caml_array.caml_array_get(species, j);\n  var match = List.assoc_opt(i, acc);\n  var match$1 = List.assoc_opt(j, acc);\n  if (match !== undefined) {\n    if (match$1 !== undefined) {\n      var r = List.remove_assoc(j, List.remove_assoc(i, acc));\n      return {\n              hd: [\n                i < j ? i : j,\n                Tree$PhyloLibWeb.zip_no_params({\n                      hd: match,\n                      tl: {\n                        hd: match$1,\n                        tl: /* [] */0\n                      }\n                    })\n              ],\n              tl: r\n            };\n    }\n    var r$1 = List.remove_assoc(i, acc);\n    return {\n            hd: [\n              i < j ? i : j,\n              Tree$PhyloLibWeb.zip_no_params({\n                    hd: Tree$PhyloLibWeb.leaf_no_params(s2),\n                    tl: {\n                      hd: match,\n                      tl: /* [] */0\n                    }\n                  })\n            ],\n            tl: r$1\n          };\n  }\n  if (match$1 === undefined) {\n    return {\n            hd: [\n              i < j ? i : j,\n              Tree$PhyloLibWeb.zip_no_params({\n                    hd: Tree$PhyloLibWeb.leaf_no_params(s1),\n                    tl: {\n                      hd: Tree$PhyloLibWeb.leaf_no_params(s2),\n                      tl: /* [] */0\n                    }\n                  })\n            ],\n            tl: acc\n          };\n  }\n  var r$2 = List.remove_assoc(j, acc);\n  return {\n          hd: [\n            i < j ? i : j,\n            Tree$PhyloLibWeb.zip_no_params({\n                  hd: Tree$PhyloLibWeb.leaf_no_params(s1),\n                  tl: {\n                    hd: match$1,\n                    tl: /* [] */0\n                  }\n                })\n          ],\n          tl: r$2\n        };\n}\n\nfunction upgma(dist, species) {\n  var match = species.length;\n  if (match !== 0) {\n    if (match !== 1) {\n      var _dist = dist;\n      var _acc = /* [] */0;\n      while(true) {\n        var acc = _acc;\n        var dist$1 = _dist;\n        if (Distance$PhyloLibWeb.is_done(dist$1)) {\n          var tree_list = List.rev_map((function (x) {\n                  return x[1];\n                }), acc);\n          if (List.length(tree_list) === 1) {\n            return List.hd(tree_list);\n          } else if (List.length(tree_list) > 1) {\n            return Tree$PhyloLibWeb.zip_no_params(tree_list);\n          } else {\n            return Pervasives.failwith(\"Precondition violated in upgma_help\");\n          }\n        }\n        var match$1 = Distance$PhyloLibWeb.min_index(dist$1);\n        var j = match$1[1];\n        var i = match$1[0];\n        var t = add_species(species, i, j, acc);\n        var d = Distance$PhyloLibWeb.combine(i, j, dist$1);\n        _acc = t;\n        _dist = d;\n        continue ;\n      };\n    } else {\n      return Tree$PhyloLibWeb.leaf_no_params(Caml_array.caml_array_get(species, 0));\n    }\n  } else {\n    return Tree$PhyloLibWeb.empty;\n  }\n}\n\nexport {\n  upgma ,\n  \n}\n/* Tree-PhyloLibWeb Not a pure module */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Printf from \"bs-platform/lib/es6/printf.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Tree$PhyloLibWeb from \"./tree.bs.js\";\n\nvar printing = {\n  contents: true\n};\n\nvar print_output = {\n  contents: \"\"\n};\n\nvar oc = {\n  contents: Pervasives.stdout\n};\n\nfunction print_f(s) {\n  if (printing.contents) {\n    return Curry._1(Printf.fprintf(oc.contents, /* Format */{\n                    _0: {\n                      TAG: /* String */2,\n                      _0: /* No_padding */0,\n                      _1: /* End_of_format */0\n                    },\n                    _1: \"%s\"\n                  }), s);\n  } else {\n    print_output.contents = print_output.contents + s;\n    return ;\n  }\n}\n\nfunction print_tabs(n) {\n  for(var x = 1; x <= n; ++x){\n    print_f(\"  \");\n  }\n  \n}\n\nfunction print_attr(_attr) {\n  while(true) {\n    var attr = _attr;\n    if (!attr) {\n      return ;\n    }\n    var t = attr.tl;\n    var match = attr.hd;\n    var space = t !== /* [] */0;\n    print_f(match[0] + (\"=\\\"\" + (match[1] + (\"\\\"\" + (\n                space ? \" \" : \"\"\n              )))));\n    _attr = t;\n    continue ;\n  };\n}\n\nfunction print_start_tag(tag, attr, tabs, newline) {\n  print_tabs(tabs);\n  print_f(\"<\" + tag);\n  print_attr(attr);\n  return print_f(newline ? \">\\n\" : \">\");\n}\n\nfunction print_end_tag(tag, tabs) {\n  print_tabs(tabs);\n  return print_f(\"</\" + (tag + \">\\n\"));\n}\n\nfunction print_inline_tag(tag, tabs, s) {\n  print_tabs(tabs);\n  print_f(\"<\" + (tag + \">\"));\n  print_f(s);\n  return print_end_tag(tag, 0);\n}\n\nfunction print_inline_opt(tag, tabs, info) {\n  if (info !== undefined) {\n    return print_inline_tag(tag, tabs, info);\n  }\n  \n}\n\nfunction print_tree_helper(tree, tabs) {\n  if (tree.TAG) {\n    print_start_tag(\"clade\", /* [] */0, tabs, true);\n    print_inline_opt(\"name\", tabs + 1 | 0, tree.name);\n    if (tree.scientific_name !== \"\" || tree.id !== undefined) {\n      print_start_tag(\"taxonomy\", /* [] */0, tabs + 1 | 0, true);\n      if (tree.scientific_name !== \"\") {\n        print_inline_tag(\"scientific_name\", tabs + 2 | 0, tree.scientific_name);\n      }\n      print_inline_opt(\"id\", tabs + 2 | 0, tree.id);\n      print_end_tag(\"taxonomy\", tabs + 1 | 0);\n    }\n    return print_end_tag(\"clade\", tabs);\n  }\n  print_start_tag(\"clade\", /* [] */0, tabs, true);\n  print_inline_opt(\"name\", tabs + 1 | 0, tree.name);\n  var bootstrap = tree.bootstrap;\n  var confidence = bootstrap !== undefined ? Pervasives.string_of_float(bootstrap) : undefined;\n  print_inline_opt(\"confidence\", tabs + 1 | 0, confidence);\n  if (tree.rank !== undefined || tree.id !== undefined) {\n    print_start_tag(\"taxonomy\", /* [] */0, tabs + 1 | 0, true);\n    print_inline_opt(\"id\", tabs + 2 | 0, tree.id);\n    print_inline_opt(\"rank\", tabs + 2 | 0, tree.rank);\n    print_end_tag(\"taxonomy\", tabs + 1 | 0);\n  }\n  var print_children = function (_children, tabs) {\n    while(true) {\n      var children = _children;\n      if (!children) {\n        return ;\n      }\n      print_tree_helper(children.hd, tabs);\n      _children = children.tl;\n      continue ;\n    };\n  };\n  print_children(tree.children, tabs + 1 | 0);\n  return print_end_tag(\"clade\", tabs);\n}\n\nfunction print_phylo_helper(phylo) {\n  print_start_tag(\"phyloxml\", /* [] */0, 0, true);\n  print_start_tag(\"phylogeny\", /* [] */0, 1, true);\n  if (phylo.name.length !== 0) {\n    print_inline_tag(\"name\", 2, phylo.name);\n  }\n  if (phylo.description.length !== 0) {\n    print_inline_tag(\"description\", 2, phylo.description);\n  }\n  if (Tree$PhyloLibWeb.is_empty(phylo.tree)) {\n    \n  } else {\n    print_tree_helper(phylo.tree, 2);\n  }\n  print_end_tag(\"phylogeny\", 1);\n  return print_end_tag(\"phyloxml\", 0);\n}\n\nfunction print_phylo_xml(phylo, f) {\n  oc.contents = Pervasives.open_out(f);\n  print_phylo_helper(phylo);\n  Pervasives.close_out(oc.contents);\n  oc.contents = Pervasives.stdout;\n  \n}\n\nfunction print_tree_xml(tree, f) {\n  printing.contents = true;\n  oc.contents = Pervasives.open_out(f);\n  var phylo = {\n    name: \"\",\n    description: \"\",\n    tree: tree\n  };\n  print_phylo_helper(phylo);\n  Pervasives.close_out(oc.contents);\n  oc.contents = Pervasives.stdout;\n  \n}\n\nfunction xml_of_tree(tree) {\n  printing.contents = false;\n  print_output.contents = \"\";\n  var phylo = {\n    name: \"\",\n    description: \"\",\n    tree: tree\n  };\n  print_phylo_helper(phylo);\n  return print_output.contents;\n}\n\nexport {\n  print_phylo_xml ,\n  print_tree_xml ,\n  xml_of_tree ,\n  \n}\n/* Tree-PhyloLibWeb Not a pure module */\n","import React, { useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Layout,\r\n  Popover,\r\n  Radio,\r\n  Row,\r\n  Spin,\r\n  Switch,\r\n  Upload,\r\n} from 'antd';\r\nimport {\r\n  InfoCircleOutlined,\r\n  LoadingOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport HoverVocab from './HoverVocab';\r\nimport * as Dna from '../ocaml_src/dna.bs';\r\nimport * as Tree from '../ocaml_src/tree.bs';\r\nimport * as Distance from '../ocaml_src/distance.bs';\r\nimport * as PhyloAlgo from '../ocaml_src/phylo_algo.bs';\r\nimport * as PhyloPrinter from '../ocaml_src/phylo_printer.bs';\r\nimport * as Msa from '../ocaml_src/msa.bs';\r\nimport influenza from '../ocaml_src/Examples/Influenza.js';\r\nimport cytochrome_c from '../ocaml_src/Examples/cytochrome_c.js';\r\nimport capsid from '../ocaml_src/Examples/Capsid.js';\r\nimport '../App.css';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default function Generate() {\r\n  const [currTree, setCurrTree] = useState(null);\r\n  const [phyloTree, setPhyloTree] = useState('');\r\n  const [alignmentChecked, setAlignmentChecked] = useState(true);\r\n  const [treeMethodChecked, setTreeMethodChecked] = useState(true);\r\n  const [dnaArr, setDnaArr] = useState([]);\r\n  const [names, setNames] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [generateClicked, setGenerateClicked] = useState(false);\r\n  const BAYESIAN_EXISTS = false;\r\n\r\n  const phyloContainer = useRef(null);\r\n\r\n  const loadingIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n  const updateSeq = (dna, name) => {\r\n    setDnaArr((dnaArr) => dnaArr.concat(dna));\r\n    setNames((names) => names.concat(name));\r\n  };\r\n\r\n  const parseDNA = async (file, filename) => {\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const dna = Dna.from_string(reader.result);\r\n        updateSeq(dna, filename);\r\n      };\r\n      reader.readAsText(file);\r\n    } catch (e) {\r\n      console.log('File printing failed');\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const changeGenerateExamples = (e) => {\r\n    switch (e.target.value) {\r\n      case 'Influenza A Viruses':\r\n        setPhyloTree(influenza);\r\n        break;\r\n      case 'COXII':\r\n        setPhyloTree(cytochrome_c);\r\n        break;\r\n      case 'Virus Capsid':\r\n        setPhyloTree(capsid);\r\n        break;\r\n    }\r\n    setGenerateClicked(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: phyloContainer.current.offsetTop - 15,\r\n    });\r\n  };\r\n\r\n  const scrollToPhylo = () => {\r\n    if (phyloContainer.current !== null) {\r\n      scrollDown();\r\n    } else {\r\n      setTimeout(() => {\r\n        scrollDown();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const generateTree = () => {\r\n    setLoading(true);\r\n    if (!alignmentChecked) {\r\n      setTimeout(() => {\r\n        const distMatrix = Distance.dist_dna(dnaArr, 1, -1, -1);\r\n        const tree = PhyloAlgo.upgma(distMatrix, names);\r\n        setCurrTree(tree);\r\n        setPhyloTree(Tree.to_string(tree));\r\n        setLoading(false);\r\n        setGenerateClicked(true);\r\n        scrollToPhylo();\r\n      }, 500);\r\n      return;\r\n    }\r\n    let job = '';\r\n\r\n    const waitStatus = (numTries) => {\r\n      fetch(\r\n        'https://www.ebi.ac.uk/Tools/services/rest/clustalo/status/' + job,\r\n        {\r\n          method: 'GET',\r\n          redirect: 'follow',\r\n        },\r\n      )\r\n        .then((response) => response.text())\r\n        .then((result) => {\r\n          if (result !== 'FINISHED' && numTries < 50) {\r\n            console.log('querying');\r\n            setTimeout(waitStatus(numTries + 1), 1000);\r\n          } else {\r\n            if (result !== 'FINISHED') {\r\n              return;\r\n            }\r\n            console.log(result);\r\n\r\n            fetch(\r\n              'https://www.ebi.ac.uk/Tools/services/rest/clustalo/result/' +\r\n                job +\r\n                '/aln-fasta',\r\n              {\r\n                method: 'GET',\r\n                redirect: 'follow',\r\n              },\r\n            )\r\n              .then((response) => response.text())\r\n              .then((result) => {\r\n                console.log('got result');\r\n                console.log(result);\r\n                const aligned_dnas = Dna.multiple_from_string(result);\r\n                console.log('got dnas');\r\n                const msa = Msa.align(aligned_dnas);\r\n                console.log('got msa');\r\n                const dist_matrix = Distance.dist_msa(msa, 1);\r\n                console.log('got dist mat');\r\n                const tree = PhyloAlgo.upgma(dist_matrix, names);\r\n                setCurrTree(tree);\r\n                setPhyloTree(Tree.to_string(tree));\r\n                setLoading(false);\r\n                setGenerateClicked(true);\r\n                scrollToPhylo();\r\n              })\r\n              .catch((error) => console.log('error1', error));\r\n          }\r\n        })\r\n        .catch((error) => console.log('error', error));\r\n    };\r\n\r\n    var urlencoded = new URLSearchParams();\r\n    urlencoded.append('email', 'vg222@cornell.edu');\r\n    let dnaStr = '';\r\n    for (let i = 0; i < dnaArr.length; i++) {\r\n      dnaStr += '>';\r\n      dnaStr += names[i].split(' ').join('_');\r\n      dnaStr += '\\n';\r\n      dnaStr += Dna.to_string(dnaArr[i]);\r\n      dnaStr += '\\n';\r\n    }\r\n    urlencoded.append('sequence', dnaStr);\r\n    urlencoded.append('outfmt', 'fa');\r\n\r\n    fetch('https://www.ebi.ac.uk/Tools/services/rest/clustalo/run', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: urlencoded,\r\n      redirect: 'follow',\r\n    })\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        job = result;\r\n        console.log(job);\r\n        waitStatus(0);\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n  const downloadTreeLink = () => {\r\n    const treeXML = PhyloPrinter.xml_of_tree(currTree);\r\n    return 'data:text/xml;charset=utf-8,' + encodeURIComponent(treeXML);\r\n  };\r\n\r\n  const clean_file_name = (name) => {\r\n    return name.split('.').slice(0, -1).join('.').toUpperCase();\r\n  };\r\n  const fastaUploadProps = {\r\n    accept: '.FASTA, .txt, .fasta',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    multiple: true,\r\n    transformFile(file) {\r\n      const file_name = clean_file_name(file.name);\r\n      parseDNA(file, file_name);\r\n    },\r\n\r\n    onRemove(file) {\r\n      const file_name = clean_file_name(file.name);\r\n      const file_index = names.indexOf(file_name);\r\n      dnaArr.splice(file_index, 1);\r\n      names.splice(file_index, 1);\r\n      setDnaArr(dnaArr);\r\n      setNames(names);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Content justify=\"center\">\r\n        <Row className=\"page\" justify=\"center\">\r\n          <div>\r\n            <h1>Generate a Phylogenetic Tree</h1>\r\n            <h2>\r\n              By computing similarity scores for DNA samples of species, we can\r\n              infer their species' evolutionary history through time.\r\n            </h2>\r\n            <h2>\r\n              Begin by uploading{' '}\r\n              <HoverVocab\r\n                content={\r\n                  <p>\r\n                    The FASTA format is a way of representing nucleotide\r\n                    sequences. It was popularized by the FASTA software\r\n                    developed by David J. Lipman and William R. Pearson.\r\n                  </p>\r\n                }\r\n                vocab=\".FASTA\"\r\n                link=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC280013/\"\r\n                linkText=\"the original paper on the FASTA program\"\r\n              />{' '}\r\n              files that contain DNA sequences, or use our example DNA\r\n              sequences.\r\n            </h2>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <h3 className=\"example-text\">See some examples:</h3>\r\n        </Row>\r\n        <Row className=\"centered-content\" gutter={[5, 5]}>\r\n          <Col lg={1}></Col>\r\n          <Col lg={10} md={12} className=\"centered-content\">\r\n            <Radio.Group onChange={changeGenerateExamples}>\r\n              <Radio.Button value=\"Virus Capsid\">\r\n                Virus Capsid Gene\r\n              </Radio.Button>\r\n              <Radio.Button value=\"COXII\">\r\n                Cytochrome C Oxidase Subunit II\r\n              </Radio.Button>\r\n              <Radio.Button value=\"Influenza A Viruses\">\r\n                Influenza A PB-2\r\n              </Radio.Button>\r\n            </Radio.Group>\r\n          </Col>\r\n          <Col lg={1} md={12}>\r\n            <Button>\r\n              <a\r\n                href={\r\n                  process.env.PUBLIC_URL + '/examples/FASTA/phylo_examples.zip'\r\n                }\r\n              >\r\n                Download Examples\r\n              </a>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <h3 className=\"upload-text\">Or upload 3 or more FASTA files:</h3>\r\n        </Row>\r\n        <Row className=\"horizontally-centered\">\r\n          <Popover\r\n            content={\r\n              <div>\r\n                <p>\r\n                  Clustal and DP are two techniques of aligning DNA sequences.\r\n                  Clustal is a software package used for multiple sequence\r\n                  alignment, utilizing heuristics for faster alignments. The\r\n                  dynamic programming (DP) technique generates a globally\r\n                  optimum alignment, but may be situationally slower than\r\n                  Clustal.\r\n                </p>\r\n                {BAYESIAN_EXISTS ? (\r\n                  <p>\r\n                    UPGMA and Bayesian inference are two ways of generating\r\n                    phylogenetic trees from sequence alignments. UPGMA\r\n                    (unweighted pair group method with arithmetic mean) is an\r\n                    agglomerative clustering method that groups sequences based\r\n                    on pairwise similarity. Bayesian inference uses prior\r\n                    information and Markov Chain Monte Carlo sampling to\r\n                    construct a chain of trees and get a sample of the final\r\n                    tree distribution, thereby finding the most likely\r\n                    phylogenetic tree. Bayesian inference is slower than UPGMA,\r\n                    but more accurate and customizable.\r\n                  </p>\r\n                ) : null}\r\n              </div>\r\n            }\r\n            title=\"MSA Information\"\r\n            trigger=\"click\"\r\n          >\r\n            <div className=\"generate-info\">\r\n              <InfoCircleOutlined />\r\n            </div>\r\n          </Popover>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <Switch\r\n              checkedChildren=\"Clustal\"\r\n              unCheckedChildren=\"DP\"\r\n              className=\"generate-toggle\"\r\n              defaultChecked\r\n              onChange={(checked, event) => {\r\n                setAlignmentChecked(checked);\r\n                if (!checked) {\r\n                  setTreeMethodChecked(true);\r\n                }\r\n              }}\r\n            />\r\n            {BAYESIAN_EXISTS ? (\r\n              <Switch\r\n                checked={treeMethodChecked}\r\n                checkedChildren=\"UPGMA\"\r\n                unCheckedChildren=\"Bayesian\"\r\n                className=\"generate-toggle\"\r\n                defaultChecked\r\n                disabled={!alignmentChecked}\r\n                onChange={(checked, event) => {\r\n                  setTreeMethodChecked(checked);\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <Upload {...fastaUploadProps}>\r\n            <Button>\r\n              <UploadOutlined /> Upload .FASTA files\r\n            </Button>\r\n          </Upload>\r\n          <Button\r\n            onClick={generateTree}\r\n            className=\"action-button\"\r\n            disabled={dnaArr.length < 3}\r\n          >\r\n            Generate tree\r\n          </Button>\r\n          {loading ? (\r\n            <Spin className=\"spinner\" indicator={loadingIcon} />\r\n          ) : null}\r\n        </Row>\r\n        {generateClicked ? (\r\n          <Row className=\"centered-content\">\r\n            <Button>\r\n              <a href={downloadTreeLink()} download=\"tree.xml\">\r\n                Save Displayed Tree as PhyloXML\r\n              </a>\r\n            </Button>\r\n          </Row>\r\n        ) : null}\r\n      </Content>\r\n      {phyloTree ? (\r\n        <Row justify=\"center\">\r\n          <div className=\"ascii-phylo-container\" ref={phyloContainer}>\r\n            <p className=\"ascii-phylo\">{phyloTree}</p>\r\n          </div>\r\n        </Row>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Char from \"bs-platform/lib/es6/char.js\";\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Stream from \"bs-platform/lib/es6/stream.js\";\nimport * as $$String from \"bs-platform/lib/es6/string.js\";\nimport * as Hashtbl from \"bs-platform/lib/es6/hashtbl.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Caml_format from \"bs-platform/lib/es6/caml_format.js\";\nimport * as Caml_js_exceptions from \"bs-platform/lib/es6/caml_js_exceptions.js\";\n\nfunction is_word(t) {\n  if (typeof t === \"number\") {\n    if (t >= 14) {\n      return t < 17;\n    } else {\n      return t < 9;\n    }\n  } else {\n    return true;\n  }\n}\n\nfunction to_string(t) {\n  if (typeof t !== \"number\") {\n    if (t.TAG) {\n      return t._0;\n    } else {\n      return String(t._0);\n    }\n  }\n  switch (t) {\n    case /* Phylogeny */0 :\n        return \"phylogeny\";\n    case /* Name */1 :\n        return \"name\";\n    case /* Description */2 :\n        return \"description\";\n    case /* Clade */3 :\n        return \"clade\";\n    case /* Rank */4 :\n        return \"rank\";\n    case /* Confidence */5 :\n        return \"confidence\";\n    case /* Taxonomy */6 :\n        return \"taxonomy\";\n    case /* SciName */7 :\n        return \"scientific_name\";\n    case /* ID */8 :\n        return \"id\";\n    case /* LAngle */9 :\n        return \"<\";\n    case /* LAngleSlash */10 :\n        return \"</\";\n    case /* RAngle */11 :\n        return \">\";\n    case /* Quote */12 :\n        return \"quote\";\n    case /* Eq */13 :\n        return \"=\";\n    case /* Dot */14 :\n        return \".\";\n    case /* True */15 :\n        return \"true\";\n    case /* False */16 :\n        return \"false\";\n    case /* EOF */17 :\n        return \"EOF\";\n    case /* Unit */18 :\n        return \"Unit\";\n    \n  }\n}\n\nvar word_token_map = Hashtbl.create(undefined, 16);\n\nHashtbl.add(word_token_map, \"phylogeny\", /* Phylogeny */0);\n\nHashtbl.add(word_token_map, \"name\", /* Name */1);\n\nHashtbl.add(word_token_map, \"description\", /* Description */2);\n\nHashtbl.add(word_token_map, \"clade\", /* Clade */3);\n\nHashtbl.add(word_token_map, \"rank\", /* Rank */4);\n\nHashtbl.add(word_token_map, \"confidence\", /* Confidence */5);\n\nHashtbl.add(word_token_map, \"taxonomy\", /* Taxonomy */6);\n\nHashtbl.add(word_token_map, \"scientific_name\", /* SciName */7);\n\nHashtbl.add(word_token_map, \"id\", /* ID */8);\n\nHashtbl.add(word_token_map, \"true\", /* True */15);\n\nHashtbl.add(word_token_map, \"false\", /* False */16);\n\nfunction get_next_line(s, _acc) {\n  while(true) {\n    var acc = _acc;\n    var c = Stream.peek(s);\n    if (c !== undefined) {\n      Stream.junk(s);\n      if (c === 10) {\n        return acc;\n      }\n      if (c === 13) {\n        return acc;\n      }\n      _acc = acc + Char.escaped(c);\n      continue ;\n    }\n    if (acc === \"\") {\n      throw {\n            RE_EXN_ID: \"End_of_file\",\n            Error: new Error()\n          };\n    }\n    return acc;\n  };\n}\n\nfunction make_stream_helper(s, is_file) {\n  var stream;\n  if (is_file) {\n    var in_channel = Pervasives.open_in(s);\n    stream = Stream.from(function (param) {\n          try {\n            return Pervasives.input_line(in_channel);\n          }\n          catch (raw_exn){\n            var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n            if (exn.RE_EXN_ID === \"End_of_file\") {\n              return ;\n            }\n            throw exn;\n          }\n        });\n  } else {\n    var char_stream = Stream.of_string(s);\n    stream = Stream.from(function (param) {\n          try {\n            return get_next_line(char_stream, \"\");\n          }\n          catch (raw_exn){\n            var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n            if (exn.RE_EXN_ID === \"End_of_file\") {\n              return ;\n            }\n            throw exn;\n          }\n        });\n  }\n  var s$1 = Stream.peek(stream);\n  if (s$1 === undefined) {\n    return stream;\n  }\n  var val;\n  try {\n    val = $$String.sub(s$1, 0, 5);\n  }\n  catch (raw_exn){\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n    if (exn.RE_EXN_ID === \"Invalid_argument\") {\n      return stream;\n    }\n    throw exn;\n  }\n  if (val !== \"<?xml\") {\n    return stream;\n  }\n  Stream.junk(stream);\n  return stream;\n}\n\nfunction stream_of_file(f) {\n  return make_stream_helper(f, true);\n}\n\nfunction stream_of_string(s) {\n  return make_stream_helper(s, false);\n}\n\nfunction stream_of_line(stream) {\n  var str;\n  try {\n    str = Stream.next(stream);\n  }\n  catch (raw_exn){\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n    if (exn.RE_EXN_ID === Stream.Failure) {\n      throw {\n            RE_EXN_ID: \"End_of_file\",\n            Error: new Error()\n          };\n    }\n    throw exn;\n  }\n  return Stream.of_string(str);\n}\n\nfunction is_special_char(c) {\n  if (c >= 60) {\n    return c < 63;\n  } else {\n    return c === 34;\n  }\n}\n\nfunction lex_keyword(stream, acc) {\n  var c = Stream.peek(stream);\n  if (c !== undefined) {\n    var val;\n    try {\n      val = c;\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn.RE_EXN_ID === Stream.Failure) {\n        return lex_keyword_helper(acc);\n      }\n      throw exn;\n    }\n    if (val !== 32) {\n      if (Hashtbl.mem(word_token_map, acc)) {\n        return Hashtbl.find(word_token_map, acc);\n      } else if (is_special_char(c)) {\n        return {\n                TAG: /* Word */1,\n                _0: acc\n              };\n      } else {\n        Stream.junk(stream);\n        return lex_keyword(stream, acc + Char.escaped(c));\n      }\n    } else {\n      return lex_keyword_helper(acc);\n    }\n  } else {\n    return lex_keyword_helper(acc);\n  }\n}\n\nfunction lex_keyword_helper(acc) {\n  if (Hashtbl.mem(word_token_map, acc)) {\n    return Hashtbl.find(word_token_map, acc);\n  } else {\n    return {\n            TAG: /* Word */1,\n            _0: acc\n          };\n  }\n}\n\nfunction is_number(c) {\n  return !(c > 57 || c < 48);\n}\n\nfunction lex_number(stream, _acc) {\n  while(true) {\n    var acc = _acc;\n    var c = Stream.peek(stream);\n    if (c === undefined) {\n      return {\n              TAG: /* Num */0,\n              _0: Caml_format.caml_int_of_string(acc)\n            };\n    }\n    if (!is_number(c)) {\n      return {\n              TAG: /* Num */0,\n              _0: Caml_format.caml_int_of_string(acc)\n            };\n    }\n    Stream.junk(stream);\n    _acc = acc + Char.escaped(c);\n    continue ;\n  };\n}\n\nfunction tokenize_next_line(stream) {\n  var x;\n  try {\n    x = stream_of_line(stream);\n  }\n  catch (raw_exn){\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n    if (exn.RE_EXN_ID === \"End_of_file\") {\n      return {\n              hd: /* EOF */17,\n              tl: /* [] */0\n            };\n    }\n    throw exn;\n  }\n  var _acc = /* [] */0;\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    var c;\n    try {\n      c = Stream.next(x);\n      exit = 1;\n    }\n    catch (raw_exn$1){\n      var exn$1 = Caml_js_exceptions.internalToOCamlException(raw_exn$1);\n      if (exn$1.RE_EXN_ID === Stream.Failure) {\n        return List.rev(acc);\n      }\n      if (exn$1.RE_EXN_ID === \"End_of_file\") {\n        return {\n                hd: /* EOF */17,\n                tl: /* [] */0\n              };\n      }\n      throw exn$1;\n    }\n    if (exit === 1) {\n      var exit$1 = 0;\n      if (c >= 32) {\n        if (c !== 46) {\n          if (c >= 60) {\n            if (c >= 63) {\n              exit$1 = 2;\n            } else {\n              switch (c - 60 | 0) {\n                case 0 :\n                    var n = Stream.peek(x);\n                    if (n === undefined) {\n                      return List.rev({\n                                  hd: /* LAngle */9,\n                                  tl: acc\n                                });\n                    }\n                    if (n === /* \"/\" */47) {\n                      Stream.junk(x);\n                      _acc = {\n                        hd: /* LAngleSlash */10,\n                        tl: acc\n                      };\n                      continue ;\n                    }\n                    _acc = {\n                      hd: /* LAngle */9,\n                      tl: acc\n                    };\n                    continue ;\n                case 1 :\n                    _acc = {\n                      hd: /* Eq */13,\n                      tl: acc\n                    };\n                    continue ;\n                case 2 :\n                    _acc = {\n                      hd: /* RAngle */11,\n                      tl: acc\n                    };\n                    continue ;\n                \n              }\n            }\n          } else if (c >= 35) {\n            exit$1 = 2;\n          } else {\n            switch (c - 32 | 0) {\n              case 0 :\n                  continue ;\n              case 1 :\n                  exit$1 = 2;\n                  break;\n              case 2 :\n                  _acc = {\n                    hd: /* Quote */12,\n                    tl: acc\n                  };\n                  continue ;\n              \n            }\n          }\n        } else {\n          _acc = {\n            hd: /* Dot */14,\n            tl: acc\n          };\n          continue ;\n        }\n      } else if (c >= 11) {\n        if (c !== 13) {\n          exit$1 = 2;\n        } else {\n          continue ;\n        }\n      } else {\n        if (c >= 9) {\n          continue ;\n        }\n        exit$1 = 2;\n      }\n      if (exit$1 === 2) {\n        if (is_number(c)) {\n          _acc = {\n            hd: lex_number(x, Char.escaped(c)),\n            tl: acc\n          };\n          continue ;\n        }\n        _acc = {\n          hd: lex_keyword(x, Char.escaped(c)),\n          tl: acc\n        };\n        continue ;\n      }\n      \n    }\n    \n  };\n}\n\nfunction token_function_builder(stream) {\n  var tokens_in_line = {\n    contents: tokenize_next_line(stream)\n  };\n  var token_function = {\n    contents: (function (b, param) {\n        return /* EOF */17;\n      })\n  };\n  token_function.contents = (function (b) {\n      if (b) {\n        return function (param) {\n          var match = tokens_in_line.contents;\n          if (match) {\n            return match.hd;\n          } else {\n            tokens_in_line.contents = tokenize_next_line(stream);\n            return Curry._2(token_function.contents, true, undefined);\n          }\n        };\n      } else {\n        return function (param) {\n          var match = tokens_in_line.contents;\n          if (match) {\n            tokens_in_line.contents = match.tl;\n            return /* Unit */18;\n          } else {\n            tokens_in_line.contents = tokenize_next_line(stream);\n            return /* Unit */18;\n          }\n        };\n      }\n    });\n  return token_function.contents;\n}\n\nexport {\n  is_word ,\n  to_string ,\n  stream_of_file ,\n  stream_of_string ,\n  tokenize_next_line ,\n  token_function_builder ,\n  \n}\n/* word_token_map Not a pure module */\n","// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Caml_format from \"bs-platform/lib/es6/caml_format.js\";\nimport * as Caml_exceptions from \"bs-platform/lib/es6/caml_exceptions.js\";\nimport * as Tree$PhyloLibWeb from \"./tree.bs.js\";\nimport * as Lexer$PhyloLibWeb from \"./lexer.bs.js\";\n\nvar $$SyntaxError = Caml_exceptions.create(\"Phylo_parser-PhyloLibWeb.SyntaxError\");\n\nvar empty_phylo = {\n  name: \"\",\n  description: \"\",\n  tree: Tree$PhyloLibWeb.empty\n};\n\nvar empty_clade_attr = {\n  name: undefined,\n  rank: undefined,\n  confidence: undefined,\n  taxonomy: undefined\n};\n\nfunction empty_start_tag(t) {\n  return {\n          tag_name: t,\n          str_attr: undefined,\n          num_attr: undefined,\n          bool_attr: undefined\n        };\n}\n\nfunction print_debug(s) {\n  \n}\n\nvar peek = {\n  contents: (function (param) {\n      return /* EOF */17;\n    })\n};\n\nvar consume_token = {\n  contents: (function (param) {\n      return /* EOF */17;\n    })\n};\n\nfunction consume(token) {\n  var x = Curry._1(peek.contents, undefined);\n  if (Caml_obj.caml_equal(x, token)) {\n    Curry._1(consume_token.contents, undefined);\n    return ;\n  }\n  print_debug(\"Expected \" + (Lexer$PhyloLibWeb.to_string(token) + (\", got \" + Lexer$PhyloLibWeb.to_string(x))));\n  throw {\n        RE_EXN_ID: $$SyntaxError,\n        Error: new Error()\n      };\n}\n\nfunction is_valid_tag(t) {\n  if (typeof t !== \"number\") {\n    if (t.TAG === /* Word */1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  switch (t) {\n    case /* Phylogeny */0 :\n    case /* Name */1 :\n    case /* Description */2 :\n    case /* Clade */3 :\n    case /* Rank */4 :\n    case /* Confidence */5 :\n    case /* Taxonomy */6 :\n    case /* SciName */7 :\n    case /* ID */8 :\n        return true;\n    default:\n      return false;\n  }\n}\n\nfunction parse_words(_acc) {\n  while(true) {\n    var acc = _acc;\n    var w = Curry._1(peek.contents, undefined);\n    if (typeof w === \"number\") {\n      switch (w) {\n        case /* Name */1 :\n        case /* Description */2 :\n        case /* Clade */3 :\n        case /* Rank */4 :\n        case /* Confidence */5 :\n        case /* Taxonomy */6 :\n        case /* ID */8 :\n        case /* Dot */14 :\n        case /* True */15 :\n            break;\n        default:\n          return acc;\n      }\n    } else {\n      if (w.TAG) {\n        var s = w._0;\n        consume({\n              TAG: /* Word */1,\n              _0: s\n            });\n        if (acc !== \"\") {\n          _acc = acc + (\" \" + s);\n          continue ;\n        }\n        _acc = s;\n        continue ;\n      }\n      var n = w._0;\n      consume({\n            TAG: /* Num */0,\n            _0: n\n          });\n      if (acc !== \"\") {\n        _acc = acc + (\" \" + String(n));\n        continue ;\n      }\n      _acc = String(n);\n      continue ;\n    }\n    consume(w);\n    if (acc !== \"\") {\n      _acc = acc + (\" \" + Lexer$PhyloLibWeb.to_string(w));\n      continue ;\n    }\n    _acc = Lexer$PhyloLibWeb.to_string(w);\n    continue ;\n  };\n}\n\nfunction add_assoc(lst, attr) {\n  if (lst !== undefined) {\n    return {\n            hd: attr,\n            tl: lst\n          };\n  } else {\n    return {\n            hd: attr,\n            tl: /* [] */0\n          };\n  }\n}\n\nfunction consume_end_tag(t) {\n  consume(/* LAngleSlash */10);\n  consume(t);\n  return consume(/* RAngle */11);\n}\n\nfunction add_attr(tag, attr) {\n  var x = Curry._1(peek.contents, undefined);\n  if (typeof x === \"number\") {\n    if (x === /* Quote */12) {\n      consume(/* Quote */12);\n      var match = Curry._1(peek.contents, undefined);\n      var return_tag;\n      if (typeof match === \"number\") {\n        if (match !== 15) {\n          if (match !== 16) {\n            print_debug(\"add_attr attribute error\");\n            throw {\n                  RE_EXN_ID: $$SyntaxError,\n                  Error: new Error()\n                };\n          }\n          consume(/* False */16);\n          return_tag = {\n            tag_name: tag.tag_name,\n            str_attr: tag.str_attr,\n            num_attr: tag.num_attr,\n            bool_attr: add_assoc(tag.bool_attr, [\n                  attr,\n                  false\n                ])\n          };\n        } else {\n          consume(/* True */15);\n          return_tag = {\n            tag_name: tag.tag_name,\n            str_attr: tag.str_attr,\n            num_attr: tag.num_attr,\n            bool_attr: add_assoc(tag.bool_attr, [\n                  attr,\n                  true\n                ])\n          };\n        }\n      } else {\n        var words = parse_words(\"\");\n        return_tag = {\n          tag_name: tag.tag_name,\n          str_attr: add_assoc(tag.str_attr, [\n                attr,\n                words\n              ]),\n          num_attr: tag.num_attr,\n          bool_attr: tag.bool_attr\n        };\n      }\n      consume(/* Quote */12);\n      return return_tag;\n    }\n    print_debug(\"add_attr match failure\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  } else {\n    if (x.TAG) {\n      print_debug(\"add_attr match failure\");\n      throw {\n            RE_EXN_ID: $$SyntaxError,\n            Error: new Error()\n          };\n    }\n    var x$1 = x._0;\n    consume({\n          TAG: /* Num */0,\n          _0: x$1\n        });\n    return {\n            tag_name: tag.tag_name,\n            str_attr: tag.str_attr,\n            num_attr: add_assoc(tag.num_attr, [\n                  attr,\n                  x$1\n                ]),\n            bool_attr: tag.bool_attr\n          };\n  }\n}\n\nfunction parse_start_tag(param) {\n  consume(/* LAngle */9);\n  var x = Curry._1(peek.contents, undefined);\n  var tmp;\n  if (is_valid_tag(x)) {\n    consume(x);\n    tmp = empty_start_tag(x);\n  } else {\n    print_debug(\"parse_start_tag error\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  }\n  var _tag = tmp;\n  while(true) {\n    var tag = _tag;\n    var x$1 = Curry._1(peek.contents, undefined);\n    if (Lexer$PhyloLibWeb.is_word(x$1)) {\n      consume(x$1);\n      consume(/* Eq */13);\n      var attr = Lexer$PhyloLibWeb.to_string(x$1);\n      _tag = add_attr(tag, attr);\n      continue ;\n    }\n    if (typeof x$1 === \"number\") {\n      if (x$1 !== 11) {\n        print_debug(\"parse_attr match failure\");\n        throw {\n              RE_EXN_ID: $$SyntaxError,\n              Error: new Error()\n            };\n      }\n      consume(/* RAngle */11);\n      return tag;\n    }\n    print_debug(\"parse_attr match failure\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  };\n}\n\nfunction ignore_tag(t) {\n  while(true) {\n    var x = Curry._1(peek.contents, undefined);\n    if (typeof x === \"number\") {\n      if (x !== 9) {\n        if (x === 10) {\n          return consume_end_tag(t);\n        }\n        consume(x);\n        continue ;\n      }\n      var tag = parse_start_tag(undefined);\n      ignore_tag(tag.tag_name);\n      continue ;\n    }\n    consume(x);\n    continue ;\n  };\n}\n\nfunction parse_name(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"Name not word/number\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  }\n  var name = parse_words(\"\");\n  consume_end_tag(/* Name */1);\n  return name;\n}\n\nfunction parse_description(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"Description not word/number\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  }\n  var descr = parse_words(\"\");\n  consume_end_tag(/* Description */2);\n  return descr;\n}\n\nfunction parse_float(n) {\n  consume(/* Dot */14);\n  var x = Curry._1(peek.contents, undefined);\n  if (typeof x === \"number\") {\n    print_debug(\"Warning: confidence not valid. Set to default 0.0\");\n    consume_end_tag(/* Confidence */5);\n    return 0.0;\n  }\n  if (x.TAG) {\n    print_debug(\"Warning: confidence not valid. Set to default 0.0\");\n    consume_end_tag(/* Confidence */5);\n    return 0.0;\n  }\n  var x$1 = x._0;\n  var f = Caml_format.caml_float_of_string(String(n) + (\".\" + String(x$1)));\n  consume({\n        TAG: /* Num */0,\n        _0: x$1\n      });\n  consume_end_tag(/* Confidence */5);\n  return f;\n}\n\nfunction parse_confidence(param) {\n  var n = Curry._1(peek.contents, undefined);\n  if (typeof n === \"number\") {\n    if (n === /* Dot */14) {\n      return parse_float(0);\n    }\n    print_debug(\"Confidence not a number\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  } else {\n    if (n.TAG) {\n      print_debug(\"Confidence not a number\");\n      throw {\n            RE_EXN_ID: $$SyntaxError,\n            Error: new Error()\n          };\n    }\n    var n$1 = n._0;\n    consume({\n          TAG: /* Num */0,\n          _0: n$1\n        });\n    if (Curry._1(peek.contents, undefined) === /* Dot */14) {\n      return parse_float(n$1);\n    } else {\n      consume_end_tag(/* Confidence */5);\n      return n$1;\n    }\n  }\n}\n\nfunction parse_id(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"ID not word/number\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  }\n  var name = parse_words(\"\");\n  consume_end_tag(/* ID */8);\n  return name;\n}\n\nfunction parse_scientific_name(param) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    print_debug(\"Scientific name not word/number\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  }\n  var name = parse_words(\"\");\n  consume_end_tag(/* SciName */7);\n  return name;\n}\n\nfunction parse_taxonomy(_taxonomy) {\n  while(true) {\n    var taxonomy = _taxonomy;\n    var match = Curry._1(peek.contents, undefined);\n    if (typeof match === \"number\") {\n      if (match !== 9) {\n        if (match !== 10) {\n          print_debug(\"Unexpected token encountered when parsing taxonomy\");\n          throw {\n                RE_EXN_ID: $$SyntaxError,\n                Error: new Error()\n              };\n        }\n        consume_end_tag(/* Taxonomy */6);\n        return taxonomy;\n      }\n      var tag = parse_start_tag(undefined);\n      var x = tag.tag_name;\n      if (typeof x === \"number\") {\n        if (x !== 7) {\n          if (x !== 8) {\n            ignore_tag(x);\n            continue ;\n          }\n          _taxonomy = {\n            id: parse_id(undefined),\n            scientific_name: taxonomy.scientific_name\n          };\n          continue ;\n        }\n        _taxonomy = {\n          id: taxonomy.id,\n          scientific_name: parse_scientific_name(undefined)\n        };\n        continue ;\n      }\n      ignore_tag(x);\n      continue ;\n    }\n    print_debug(\"Unexpected token encountered when parsing taxonomy\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  };\n}\n\nfunction parse_clade(acc, attr) {\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    if (match !== 9) {\n      if (match !== 10) {\n        print_debug(\"parse_clade match failure\");\n        throw {\n              RE_EXN_ID: $$SyntaxError,\n              Error: new Error()\n            };\n      }\n      consume_end_tag(/* Clade */3);\n      if (Tree$PhyloLibWeb.is_empty(acc)) {\n        var taxon = attr.taxonomy;\n        if (taxon !== undefined) {\n          return Tree$PhyloLibWeb.leaf(taxon.scientific_name, taxon.id, attr.name);\n        }\n        var n = attr.name;\n        if (n !== undefined) {\n          return Tree$PhyloLibWeb.leaf(n, undefined, n);\n        } else {\n          print_debug(\"Warning: no name provided\");\n          return Tree$PhyloLibWeb.leaf_no_params(\"Unnamed\");\n        }\n      } else {\n        if (acc.TAG) {\n          return acc;\n        }\n        var taxon$1 = attr.taxonomy;\n        var id = taxon$1 !== undefined ? taxon$1.id : undefined;\n        return {\n                TAG: /* Clade */0,\n                clade_id: acc.clade_id,\n                children: acc.children,\n                bootstrap: attr.confidence,\n                rank: attr.rank,\n                id: id,\n                name: attr.name\n              };\n      }\n    }\n    var tag = parse_start_tag(undefined);\n    var x = tag.tag_name;\n    if (typeof x === \"number\") {\n      switch (x) {\n        case /* Name */1 :\n            return parse_clade(acc, {\n                        name: parse_name(undefined),\n                        rank: attr.rank,\n                        confidence: attr.confidence,\n                        taxonomy: attr.taxonomy\n                      });\n        case /* Clade */3 :\n            if (Tree$PhyloLibWeb.is_empty(acc)) {\n              return parse_clade(parse_clade(acc, empty_clade_attr), attr);\n            }\n            var clade = parse_clade(Tree$PhyloLibWeb.empty, empty_clade_attr);\n            return parse_clade(Tree$PhyloLibWeb.zip_no_params({\n                            hd: acc,\n                            tl: {\n                              hd: clade,\n                              tl: /* [] */0\n                            }\n                          }), attr);\n        case /* Confidence */5 :\n            return parse_clade(acc, {\n                        name: attr.name,\n                        rank: attr.rank,\n                        confidence: parse_confidence(undefined),\n                        taxonomy: attr.taxonomy\n                      });\n        case /* Taxonomy */6 :\n            return parse_clade(acc, {\n                        name: attr.name,\n                        rank: attr.rank,\n                        confidence: attr.confidence,\n                        taxonomy: parse_taxonomy({\n                              id: undefined,\n                              scientific_name: \"Unnamed\"\n                            })\n                      });\n        case /* Phylogeny */0 :\n        case /* Description */2 :\n        case /* Rank */4 :\n        case /* SciName */7 :\n        case /* ID */8 :\n        case /* LAngle */9 :\n        case /* LAngleSlash */10 :\n        case /* RAngle */11 :\n        case /* Quote */12 :\n        case /* Eq */13 :\n        case /* Dot */14 :\n        case /* True */15 :\n        case /* False */16 :\n        case /* EOF */17 :\n        case /* Unit */18 :\n            break;\n        \n      }\n    }\n    ignore_tag(x);\n    return parse_clade(acc, attr);\n  }\n  print_debug(\"parse_clade match failure\");\n  throw {\n        RE_EXN_ID: $$SyntaxError,\n        Error: new Error()\n      };\n}\n\nfunction parse_phylogeny(_acc) {\n  while(true) {\n    var acc = _acc;\n    var match = Curry._1(peek.contents, undefined);\n    if (typeof match === \"number\") {\n      if (match !== 9) {\n        if (match !== 10) {\n          print_debug(\"parse_phylogeny match failure\");\n          throw {\n                RE_EXN_ID: $$SyntaxError,\n                Error: new Error()\n              };\n        }\n        consume_end_tag(/* Phylogeny */0);\n        return acc;\n      }\n      var tag = parse_start_tag(undefined);\n      var x = tag.tag_name;\n      if (typeof x === \"number\") {\n        if (x >= 4) {\n          ignore_tag(x);\n          continue ;\n        }\n        switch (x) {\n          case /* Phylogeny */0 :\n              ignore_tag(x);\n              continue ;\n          case /* Name */1 :\n              _acc = {\n                name: parse_name(undefined),\n                description: acc.description,\n                tree: acc.tree\n              };\n              continue ;\n          case /* Description */2 :\n              _acc = {\n                name: acc.name,\n                description: parse_description(undefined),\n                tree: acc.tree\n              };\n              continue ;\n          case /* Clade */3 :\n              _acc = {\n                name: acc.name,\n                description: acc.description,\n                tree: parse_clade(acc.tree, empty_clade_attr)\n              };\n              continue ;\n          \n        }\n      } else {\n        ignore_tag(x);\n        continue ;\n      }\n    } else {\n      print_debug(\"parse_phylogeny match failure\");\n      throw {\n            RE_EXN_ID: $$SyntaxError,\n            Error: new Error()\n          };\n    }\n  };\n}\n\nfunction from_phylo_helper(f) {\n  var tokenizer = Lexer$PhyloLibWeb.token_function_builder(f);\n  peek.contents = Curry._1(tokenizer, true);\n  consume_token.contents = Curry._1(tokenizer, false);\n  var match = Curry._1(peek.contents, undefined);\n  if (typeof match === \"number\") {\n    if (match === 9) {\n      var tag = parse_start_tag(undefined);\n      var s = tag.tag_name;\n      if (typeof s === \"number\") {\n        print_debug(\"parse_phylo_tag error 2\");\n        throw {\n              RE_EXN_ID: $$SyntaxError,\n              Error: new Error()\n            };\n      }\n      if (s.TAG === /* Word */1) {\n        if (s._0 === \"phyloxml\") {\n          var tag$1 = parse_start_tag(undefined);\n          var match$1 = tag$1.tag_name;\n          if (typeof match$1 === \"number\") {\n            if (match$1 !== 0) {\n              print_debug(\"parse_phylo_tag error 1\");\n              throw {\n                    RE_EXN_ID: $$SyntaxError,\n                    Error: new Error()\n                  };\n            }\n            var phylo = parse_phylogeny(empty_phylo);\n            consume_end_tag({\n                  TAG: /* Word */1,\n                  _0: \"phyloxml\"\n                });\n            return phylo;\n          }\n          print_debug(\"parse_phylo_tag error 1\");\n          throw {\n                RE_EXN_ID: $$SyntaxError,\n                Error: new Error()\n              };\n        }\n        print_debug(\"parse_phylo_tag error 2\");\n        throw {\n              RE_EXN_ID: $$SyntaxError,\n              Error: new Error()\n            };\n      }\n      print_debug(\"parse_phylo_tag error 2\");\n      throw {\n            RE_EXN_ID: $$SyntaxError,\n            Error: new Error()\n          };\n    }\n    if (match === 17) {\n      return empty_phylo;\n    }\n    print_debug(\"from_phylo_helper error\");\n    throw {\n          RE_EXN_ID: $$SyntaxError,\n          Error: new Error()\n        };\n  }\n  print_debug(\"from_phylo_helper error\");\n  throw {\n        RE_EXN_ID: $$SyntaxError,\n        Error: new Error()\n      };\n}\n\nfunction from_phylo_str(s) {\n  return from_phylo_helper(Lexer$PhyloLibWeb.stream_of_string(s));\n}\n\nfunction from_phylo(f) {\n  return from_phylo_helper(Lexer$PhyloLibWeb.stream_of_file(f));\n}\n\nexport {\n  $$SyntaxError ,\n  from_phylo_str ,\n  from_phylo ,\n  \n}\n/* Tree-PhyloLibWeb Not a pure module */\n","import React, { useRef, useState } from 'react';\r\nimport { Button, Layout, Popover, Radio, Row, Upload } from 'antd';\r\nimport { InfoCircleOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport '../App.css';\r\nimport HoverVocab from './HoverVocab';\r\nimport * as Tree from '../ocaml_src/tree.bs';\r\nimport * as PhyloParser from '../ocaml_src/phylo_parser.bs';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default function Visualize() {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [currFile, setCurrFile] = useState(undefined);\r\n  const [phyloVisible, setPhyloVisible] = useState(false);\r\n  const [asciiPhylo, setasciiPhylo] = useState('');\r\n  const [currPhylo, setCurrPhylo] = useState('');\r\n\r\n  const phyloContainer = useRef(null);\r\n\r\n  const reader = new FileReader();\r\n\r\n  const displayPhyloFile = (file) => {\r\n    try {\r\n      reader.onload = () => {\r\n        const phylo = PhyloParser.from_phylo_str(reader.result);\r\n        const str = Tree.to_string(phylo.tree);\r\n        setasciiPhylo(str);\r\n        setPhyloVisible(true);\r\n        window.scrollTo({\r\n          behavior: 'smooth',\r\n          top: phyloContainer.current.offsetTop - 15,\r\n        });\r\n        phyloContainer.current.scrollTo({\r\n          behavior: 'smooth',\r\n          top: 1000,\r\n        });\r\n      };\r\n      reader.readAsText(file);\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.log('File printing failed');\r\n    }\r\n  };\r\n\r\n  const handleVisualize = function () {\r\n    setCurrPhylo('');\r\n    displayPhyloFile(currFile);\r\n  };\r\n\r\n  const uploadProps = {\r\n    accept: '.xml',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    fileList: fileList,\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    onChange(info) {\r\n      setFileList(info.fileList);\r\n    },\r\n    transformFile(file) {\r\n      setFileList([file]);\r\n      setCurrFile(file);\r\n    },\r\n  };\r\n\r\n  const changeExamples = (e) => {\r\n    const filePath =\r\n      process.env.PUBLIC_URL + '/examples/phyloXML/' + e.target.value + '.xml';\r\n    setCurrPhylo(e.target.value);\r\n    fetch(filePath)\r\n      .then((response) => response.blob())\r\n      .then((blob) => displayPhyloFile(blob));\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Content justify=\"center\">\r\n        <Row className=\"page\" justify=\"center\" gutter={[16, 16]}>\r\n          <div>\r\n            <h1>Visualize PhyloXML</h1>\r\n            <h2>\r\n              Visualize an existing{' '}\r\n              <HoverVocab\r\n                content={\r\n                  <p>\r\n                    A tree that displays the evolutionary relationships between\r\n                    various organisms.\r\n                  </p>\r\n                }\r\n                vocab=\"phylogenetic tree\"\r\n                link=\"https://www.khanacademy.org/science/high-school-biology/hs-evolution/hs-phylogeny/a/phylogenetic-trees\"\r\n                linkText=\"Khan Academy\"\r\n              />\r\n              . Begin by uploading a{' '}\r\n              <HoverVocab\r\n                content={\r\n                  <p>An XML format for describing phylogenetic trees.</p>\r\n                }\r\n                vocab=\"phyloXML\"\r\n                link=\"http://phyloxml.org/\"\r\n                linkText=\" the phyloXML website \"\r\n              />{' '}\r\n              file, or use our example files.\r\n            </h2>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <h3 className=\"example-text\">See some examples:</h3>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <Radio.Group onChange={changeExamples} value={currPhylo}>\r\n            <Radio.Button value=\"amphi_frost\">Amphibian Phylogeny</Radio.Button>\r\n            <Radio.Button value=\"tol_156\">The Tree of Life</Radio.Button>\r\n            <Radio.Button value=\"apaf\">Apaf-1 Gene Family Tree</Radio.Button>\r\n          </Radio.Group>\r\n          <Popover\r\n            content={\r\n              <p>\r\n                Example files obtained from{' '}\r\n                <a\r\n                  href=\"http://phyloxml.org/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  phyloxml.org\r\n                </a>\r\n                .\r\n                {currPhylo !== '' ? (\r\n                  <p>\r\n                    See the phyloXML source for the current tree{' '}\r\n                    <a\r\n                      href={\r\n                        'http://phyloxml.org/archaeopteryx-js/phyloxml_trees/' +\r\n                        currPhylo +\r\n                        '.xml'\r\n                      }\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      here\r\n                    </a>\r\n                    .\r\n                  </p>\r\n                ) : null}\r\n              </p>\r\n            }\r\n            title=\"Credits\"\r\n            trigger=\"click\"\r\n          >\r\n            <div className=\"example-credits\">\r\n              <InfoCircleOutlined />\r\n            </div>\r\n          </Popover>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <h3 className=\"example-text\">Or upload your own PhyloXML file:</h3>\r\n        </Row>\r\n        <Row className=\"horizontally-centered\">\r\n          <Upload {...uploadProps}>\r\n            <Button>\r\n              <UploadOutlined />\r\n              Upload PhyloXML Files\r\n            </Button>\r\n          </Upload>\r\n          <Button\r\n            onClick={handleVisualize}\r\n            className=\"action-button\"\r\n            disabled={fileList.length < 1}\r\n          >\r\n            Visualize\r\n          </Button>\r\n        </Row>\r\n        {phyloVisible ? (\r\n          <Row justify=\"center\">\r\n            <div className=\"ascii-phylo-container\" ref={phyloContainer}>\r\n              <p className=\"ascii-phylo\">{asciiPhylo}</p>\r\n            </div>\r\n          </Row>\r\n        ) : null}\r\n      </Content>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Button, Layout, Popover, Radio, Row, Upload } from 'antd';\r\nimport { InfoCircleOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport '../App.css';\r\nimport HoverVocab from './HoverVocab';\r\nimport * as Dna from '../ocaml_src/dna.bs';\r\nimport * as Pairwise from '../ocaml_src/pairwise.bs';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default function DisplayPairwise() {\r\n  const [displayVisible, setDisplayVisible] = useState(false);\r\n  const [alignment, setAlignment] = useState('');\r\n  const [exampleArr, setExampleArr] = useState([]);\r\n  const [exampleFileNames, setExampleFileNames] = useState([]);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [dnaArr, setDnaArr] = useState([]);\r\n\r\n  const phyloContainer = useRef(null);\r\n\r\n  const parseDNA = (file, arr, displayOnFinish) => {\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        arr.push(Dna.from_string(reader.result));\r\n        if (dnaArr.length > 2) {\r\n          setDnaArr(dnaArr.slice(-2));\r\n        }\r\n        if (arr.length === 2 && displayOnFinish) {\r\n          displayAlignment(arr);\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.log('File printing failed');\r\n    }\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: phyloContainer.current.offsetTop - 15,\r\n    });\r\n  };\r\n\r\n  const displayAlignment = (arr) => {\r\n    const [pair] = Pairwise.align_pair(arr[0], arr[1], 1, -1, -1);\r\n    const str = Pairwise.to_string(pair[0], pair[1]);\r\n    setAlignment(str.trim());\r\n    setDisplayVisible(true);\r\n    if (phyloContainer.current !== null) {\r\n      scrollDown();\r\n    } else {\r\n      setTimeout(() => {\r\n        scrollDown();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const uploadProps = {\r\n    accept: '.FASTA, .fasta, .txt',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    fileList: fileList,\r\n    onChange(info) {\r\n      setFileList(info.fileList);\r\n    },\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    multiple: true,\r\n    onRemove(file) {\r\n      dnaArr.splice(fileList.indexOf(file));\r\n      setDnaArr(dnaArr);\r\n    },\r\n    transformFile(file) {\r\n      parseDNA(file, dnaArr, false);\r\n      fileList.push(file);\r\n      setFileList(fileList.slice(-2));\r\n    },\r\n  };\r\n\r\n  const changeExamples = (e) => {\r\n    setExampleArr([]);\r\n    const files = e.target.value.split(',');\r\n    setExampleFileNames(files);\r\n    files.map((file) => {\r\n      const filePath =\r\n        process.env.PUBLIC_URL + '/examples/FASTA/' + file + '.fasta';\r\n      fetch(filePath)\r\n        .then((response) => response.blob())\r\n        .then((blob) => parseDNA(blob, exampleArr, true));\r\n      return undefined;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Content justify=\"center\">\r\n        <Row className=\"page\" justify=\"center\" gutter={[16, 16]}>\r\n          <div>\r\n            <h1>Visualize Pairwise DNA Alignments</h1>\r\n            <h2>\r\n              Visualize an{' '}\r\n              <HoverVocab\r\n                content={\r\n                  <p>\r\n                    A DNA sequence alignment arranges DNA to identify regions of\r\n                    similarity, helping reveal evolutionary relations between\r\n                    the sequences.\r\n                    <br />A pairwise alignment is an alignment of 2 sequences,\r\n                    and PhyloML utilizes the Needleman-Wunsch algorithm to\r\n                    conduct this alignment.\r\n                  </p>\r\n                }\r\n                vocab=\"alignment\"\r\n                link=\"https://www.sciencedirect.com/science/article/abs/pii/0022283670900574?via%3Dihub\"\r\n                linkText=\"the original paper on the Needleman-Wunsch algorithm\"\r\n              />{' '}\r\n              of two DNA sequences. Begin by uploading two{' '}\r\n              <HoverVocab\r\n                content={\r\n                  <p>\r\n                    The FASTA format is a way of representing nucleotide\r\n                    sequences. It was popularized by the FASTA software\r\n                    developed by David J. Lipman and William R. Pearson.\r\n                  </p>\r\n                }\r\n                vocab=\".FASTA\"\r\n                link=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC280013/\"\r\n                linkText=\"the original paper on the FASTA program\"\r\n              />{' '}\r\n              files, or use our example files.\r\n            </h2>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <h3 className=\"example-text\">See some examples:</h3>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <Radio.Group\r\n            onChange={changeExamples}\r\n            value={exampleFileNames.join(',')}\r\n          >\r\n            <Radio.Button value=\"h1n1,h3n2\">H1N1 vs H3N2</Radio.Button>\r\n            <Radio.Button value=\"h5n1,h7n7\">H5N1 vs H7N7</Radio.Button>\r\n            <Radio.Button value=\"mers,h7n9\">MERS vs H7N9</Radio.Button>\r\n          </Radio.Group>\r\n          <Popover\r\n            content={\r\n              <div>\r\n                <p>\r\n                  The pairwise alignment shown is a globally optimum alignment\r\n                  obtained via the Needleman-Wunch algorithm.\r\n                </p>\r\n                <p>\r\n                  Base pair matches, mismatches and gaps are visualized. A star\r\n                  indicates a pair match, a bar indicates a mismatch, and a\r\n                  blank space indicates a gap.\r\n                </p>\r\n                <p>\r\n                  Example files obtained from{' '}\r\n                  <a\r\n                    href=\"https://www.ncbi.nlm.nih.gov/nuccore/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    NCBI Nucleotide\r\n                  </a>\r\n                  .\r\n                  {exampleFileNames.length === 2 ? (\r\n                    <p>\r\n                      See the sources for the current alignment:{' '}\r\n                      <a\r\n                        href={\r\n                          process.env.PUBLIC_URL +\r\n                          '/examples/FASTA/' +\r\n                          exampleFileNames[0] +\r\n                          '.fasta'\r\n                        }\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {exampleFileNames[0] + '.fasta'}\r\n                      </a>{' '}\r\n                      and{' '}\r\n                      <a\r\n                        href={\r\n                          process.env.PUBLIC_URL +\r\n                          '/examples/FASTA/' +\r\n                          exampleFileNames[1] +\r\n                          '.fasta'\r\n                        }\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {exampleFileNames[1] + '.fasta'}\r\n                      </a>\r\n                      .\r\n                    </p>\r\n                  ) : null}\r\n                </p>\r\n              </div>\r\n            }\r\n            title=\"Information and Credits\"\r\n            trigger=\"hover\"\r\n          >\r\n            <div className=\"example-credits\">\r\n              <InfoCircleOutlined />\r\n            </div>\r\n          </Popover>\r\n        </Row>\r\n        <Row className=\"centered-content\">\r\n          <h3 className=\"upload-text\">Or upload 2 FASTA files:</h3>\r\n        </Row>\r\n        <Row className=\"horizontally-centered\">\r\n          <Upload {...uploadProps}>\r\n            <Button>\r\n              <UploadOutlined />\r\n              Upload .FASTA Files\r\n            </Button>\r\n          </Upload>\r\n          <Button\r\n            onClick={() => {\r\n              displayAlignment(dnaArr);\r\n              if (dnaArr.length >= 2) {\r\n                setExampleArr([]);\r\n                setExampleFileNames([]);\r\n              }\r\n            }}\r\n            className=\"action-button\"\r\n            disabled={dnaArr.length < 2}\r\n          >\r\n            Display Alignment\r\n          </Button>\r\n        </Row>\r\n        {displayVisible ? (\r\n          <Row justify=\"center\">\r\n            <div className=\"ascii-phylo-container\" ref={phyloContainer}>\r\n              <p className=\"ascii-phylo\">{alignment}</p>\r\n            </div>\r\n          </Row>\r\n        ) : null}\r\n      </Content>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as Router, Link, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Popover } from 'antd';\r\nimport { ArrowLeftOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport HomeContent from './components/HomeContent';\r\nimport Generate from './components/Generate';\r\nimport Visualize from './components/Visualize';\r\nimport DisplayPairwise from './components/DisplayPairwise';\r\n\r\nconst Header = ({ useBack }) => {\r\n  const content = (\r\n    <div>\r\n      <p>\r\n        A{' '}\r\n        <a href=\"https://en.wikipedia.org/wiki/Phylogenetic_tree\">\r\n          phylogenetic tree\r\n        </a>{' '}\r\n        is a tree that shows the evolutionary relationships between species. The\r\n        structure of these trees can be stored in{' '}\r\n        <a href=\"http://www.phyloxml.org/\">XML</a> files. To see visualizations\r\n        of such trees, you can click Visualize Phylogenetic Trees.\r\n      </p>\r\n      <p>\r\n        {' '}\r\n        We can also try to predict the structure of phylogenetic trees by\r\n        looking at the similarities in the DNAs of different species. To know\r\n        more, you can click Generate Phylogenetic Trees.\r\n      </p>\r\n    </div>\r\n  );\r\n  return (\r\n    <header className=\"site-header\">\r\n      <Link className=\"site-title\" to=\"/\">\r\n        {useBack ? (\r\n          <ArrowLeftOutlined\r\n            style={{ alignSelf: 'center', paddingRight: '10px' }}\r\n          />\r\n        ) : null}\r\n        PhyloML\r\n      </Link>\r\n      <Popover\r\n        className=\"clickable\"\r\n        content={content}\r\n        className=\"tooltip\"\r\n        trigger=\"click\"\r\n      >\r\n        <a className=\"tooltip\">\r\n          <InfoCircleOutlined style={{ paddingRight: '0.5em' }} />\r\n          Confused by all the terms?\r\n        </a>\r\n      </Popover>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst Page = ({ useBack, body }) => {\r\n  return (\r\n    <div>\r\n      <Header useBack={useBack} />\r\n      {body}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n            path=\"/generate\"\r\n            component={() => <Page useBack={true} body={<Generate />} />}\r\n          />\r\n          <Route\r\n            path=\"/visualize\"\r\n            component={() => <Page useBack={true} body={<Visualize />} />}\r\n          />\r\n          <Route\r\n            path=\"/pairwise\"\r\n            component={() => <Page useBack={true} body={<DisplayPairwise />} />}\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            component={() => <Page useBack={false} body={<HomeContent />} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}